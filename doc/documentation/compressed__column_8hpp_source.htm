<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Database Implementation Techniques Programming Task SoSe2016: compressed_column.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Database Implementation Techniques Programming Task SoSe2016
   </div>
   <div id="projectbrief">DB2 Programming Task SoSe2016</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4270bfced15e0e73154b13468c7c9ad9.htm">core</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">compressed_column.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="compressed__column_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="column__base__typed_8hpp.htm">core/column_base_typed.hpp</a>&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceCoGaDB.htm">CoGaDB</a>{</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;        </div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1CompressedColumn.htm">   19</a></span>&#160;<span class="keyword">class </span><a class="code" href="classCoGaDB_1_1CompressedColumn.htm">CompressedColumn</a> : <span class="keyword">public</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped</a>&lt;T&gt;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <span class="comment">/***************** constructors and destructor *****************/</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a262285e6e9f5e9da0af460766d978e5f">CompressedColumn</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a23f4eca59fa6f43ca95e221723728b0a">~CompressedColumn</a>();</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#acc4ba721be59d5f3b2049031bd52df74">insert</a>(<span class="keyword">const</span> boost::any&amp; new_Value)  = 0;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#acc4ba721be59d5f3b2049031bd52df74">insert</a>(<span class="keyword">const</span> T&amp; new_value)  = 0;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#af174d0f8d2eb8a1a1a891abf4a72af47">update</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid, <span class="keyword">const</span> boost::any&amp; new_value) = 0;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#af174d0f8d2eb8a1a1a891abf4a72af47">update</a>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid, <span class="keyword">const</span> boost::any&amp; new_value) = 0;      </div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        </div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)=0;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="comment">//assumes tid list is sorted ascending</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid)=0;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a8c8300485edffa6846da7907a4978053">clearContent</a>()=0;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> boost::any <span class="keyword">get</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid) = 0;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="comment">//virtual const boost::any* const getRawData()=0;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#ad1805b7bec6013529aa2aaa17117d08b">print</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>() = 0;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">size_t</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#ace77e03c40da17d6b158a008d305ea88">size</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>() = 0;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a293ce43770e123dcffad899281865a73">getSizeinBytes</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>() = 0;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a313dfb52faac7302baf34357cc6aa6e8">copy</a>() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a9058fe90f0081e187288c071d099ef61">store</a>(<span class="keyword">const</span> std::string&amp; path)  = 0;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a67ca44ed4387d857210c790571db5531">load</a>(<span class="keyword">const</span> std::string&amp; path)  = 0;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#ada550a1425ba2d502afeb99391b8124b">isMaterialized</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        </div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#abccceb7dfbcce752a4dfc4ef06904c4f">isCompressed</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>();     </div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        </div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">virtual</span> T&amp; <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a1a55526893e244c1642d79854d6849da">operator[]</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> index)  = 0;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;};</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#a25bcbfd6017a2aea1e2e0d1c48125708">   55</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm">CompressedColumn&lt;int&gt;</a> <a class="code" href="namespaceCoGaDB.htm#a25bcbfd6017a2aea1e2e0d1c48125708">CompressedIntegerColumn</a>;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#aa20fb4bc08623d2c52fe068428d50905">   56</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm">CompressedColumn&lt;float&gt;</a> <a class="code" href="namespaceCoGaDB.htm#aa20fb4bc08623d2c52fe068428d50905">CompressedFloatColumn</a>;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#a9e2b47fc7b5f933767f0a5895ee9b386">   57</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm">CompressedColumn&lt;double&gt;</a> <a class="code" href="namespaceCoGaDB.htm#a9e2b47fc7b5f933767f0a5895ee9b386">CompressedDoubleColumn</a>;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#a3657c3780f27a22c62849e0a816cbc46">   58</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm">CompressedColumn&lt;std::string&gt;</a> <a class="code" href="namespaceCoGaDB.htm#a3657c3780f27a22c62849e0a816cbc46">CompressedStringColumn</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">/***************** Start of Implementation Section ******************/</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        </div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1CompressedColumn.htm#a262285e6e9f5e9da0af460766d978e5f">   65</a></span>&#160;        <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a262285e6e9f5e9da0af460766d978e5f">CompressedColumn&lt;T&gt;::CompressedColumn</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type) : <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped</a>&lt;T&gt;(name,db_type){</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1CompressedColumn.htm#a23f4eca59fa6f43ca95e221723728b0a">   70</a></span>&#160;        <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a23f4eca59fa6f43ca95e221723728b0a">CompressedColumn&lt;T&gt;::~CompressedColumn</a>(){</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        </div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1CompressedColumn.htm#ada550a1425ba2d502afeb99391b8124b">   75</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#ada550a1425ba2d502afeb99391b8124b">CompressedColumn&lt;T&gt;::isMaterialized</a>() <span class="keyword">const</span>  throw(){</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        </div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1CompressedColumn.htm#abccceb7dfbcce752a4dfc4ef06904c4f">   80</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#abccceb7dfbcce752a4dfc4ef06904c4f">CompressedColumn&lt;T&gt;::isCompressed</a>() <span class="keyword">const</span>  throw(){</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        </div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        </div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">        bool CompressedColumn&lt;T&gt;::insert(const boost::any&amp; new_Value){</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">                return false;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">        const boost::any CompressedColumn&lt;T&gt;::get(TID tid){</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">                return boost::any();</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">        void CompressedColumn&lt;T&gt;::print() const throw(){</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">        size_t CompressedColumn&lt;T&gt;::size() const throw(){</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">                return 0;</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">        const ColumnPtr CompressedColumn&lt;T&gt;::copy() const{</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">                return ColumnPtr(NULL);</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">        bool CompressedColumn&lt;T&gt;::store(const std::string&amp; path){</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">                return std::vector&lt;TID&gt;();</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">        bool CompressedColumn&lt;T&gt;::load(const std::string&amp; path){</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">                return false;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">        bool CompressedColumn&lt;T&gt;::isMaterialized() const  throw(){</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">                return false;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">        </span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">        bool CompressedColumn&lt;T&gt;::isCompressed() const  throw(){</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">                return true;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">        T&amp; CompressedColumn&lt;T&gt;::operator[](const int index){</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">                static T t;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">                return t;</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">        template&lt;class T&gt;</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">        unsigned int CompressedColumn&lt;T&gt;::getSizeinBytes() const throw(){</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">                return values_.capacity()*sizeof(T);</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">        }</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">*/</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">/***************** End of Implementation Section ******************/</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}; <span class="comment">//end namespace CogaDB</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm">CoGaDB::CompressedColumn</a></div><div class="ttdoc">This class represents a compressed column with type T, is the base class for all compressed typed col...</div><div class="ttdef"><b>Definition:</b> <a href="compressed__column_8hpp_source.htm#l00019">compressed_column.hpp:19</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_aa20fb4bc08623d2c52fe068428d50905"><div class="ttname"><a href="namespaceCoGaDB.htm#aa20fb4bc08623d2c52fe068428d50905">CoGaDB::CompressedFloatColumn</a></div><div class="ttdeci">CompressedColumn&lt; float &gt; CompressedFloatColumn</div><div class="ttdef"><b>Definition:</b> <a href="compressed__column_8hpp_source.htm#l00056">compressed_column.hpp:56</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ae7e30b13ad239f7010ad333125321e9a"><div class="ttname"><a href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">CoGaDB::PositionListPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; PositionList &gt; PositionListPtr</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00018">base_column.hpp:18</a></div></div>
<div class="ttc" id="column__base__typed_8hpp_htm"><div class="ttname"><a href="column__base__typed_8hpp.htm">column_base_typed.hpp</a></div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_ace77e03c40da17d6b158a008d305ea88"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#ace77e03c40da17d6b158a008d305ea88">CoGaDB::CompressedColumn::size</a></div><div class="ttdeci">virtual size_t size() const =0</div><div class="ttdoc">returns the number of values (rows) in a column </div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_ada550a1425ba2d502afeb99391b8124b"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#ada550a1425ba2d502afeb99391b8124b">CoGaDB::CompressedColumn::isMaterialized</a></div><div class="ttdeci">virtual bool isMaterialized() const </div><div class="ttdoc">use this method to determine whether the column is materialized or a Lookup Column ...</div><div class="ttdef"><b>Definition:</b> <a href="compressed__column_8hpp_source.htm#l00075">compressed_column.hpp:75</a></div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_abccceb7dfbcce752a4dfc4ef06904c4f"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#abccceb7dfbcce752a4dfc4ef06904c4f">CoGaDB::CompressedColumn::isCompressed</a></div><div class="ttdeci">virtual bool isCompressed() const </div><div class="ttdoc">use this method to determine whether the column is materialized or a Lookup Column ...</div><div class="ttdef"><b>Definition:</b> <a href="compressed__column_8hpp_source.htm#l00080">compressed_column.hpp:80</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a25bcbfd6017a2aea1e2e0d1c48125708"><div class="ttname"><a href="namespaceCoGaDB.htm#a25bcbfd6017a2aea1e2e0d1c48125708">CoGaDB::CompressedIntegerColumn</a></div><div class="ttdeci">CompressedColumn&lt; int &gt; CompressedIntegerColumn</div><div class="ttdef"><b>Definition:</b> <a href="compressed__column_8hpp_source.htm#l00055">compressed_column.hpp:55</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_ae8d2ac257af16e7d8bc78e1ea43cb14d"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">CoGaDB::ColumnBase::ColumnPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; ColumnBase &gt; ColumnPtr</div><div class="ttdoc">defines a smart pointer to a ColumnBase Object </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00041">base_column.hpp:41</a></div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_a67ca44ed4387d857210c790571db5531"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#a67ca44ed4387d857210c790571db5531">CoGaDB::CompressedColumn::load</a></div><div class="ttdeci">virtual bool load(const std::string &amp;path)=0</div><div class="ttdoc">load column from disc </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ac53a708d27568a6584e7c03b4ab659e5"><div class="ttname"><a href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">CoGaDB::AttributeType</a></div><div class="ttdeci">AttributeType</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00016">global_definitions.hpp:16</a></div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_a23f4eca59fa6f43ca95e221723728b0a"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#a23f4eca59fa6f43ca95e221723728b0a">CoGaDB::CompressedColumn::~CompressedColumn</a></div><div class="ttdeci">virtual ~CompressedColumn()</div><div class="ttdef"><b>Definition:</b> <a href="compressed__column_8hpp_source.htm#l00070">compressed_column.hpp:70</a></div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_af174d0f8d2eb8a1a1a891abf4a72af47"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#af174d0f8d2eb8a1a1a891abf4a72af47">CoGaDB::CompressedColumn::update</a></div><div class="ttdeci">virtual bool update(TID tid, const boost::any &amp;new_value)=0</div><div class="ttdoc">updates the value on position tid with a value new_Value </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a3657c3780f27a22c62849e0a816cbc46"><div class="ttname"><a href="namespaceCoGaDB.htm#a3657c3780f27a22c62849e0a816cbc46">CoGaDB::CompressedStringColumn</a></div><div class="ttdeci">CompressedColumn&lt; std::string &gt; CompressedStringColumn</div><div class="ttdef"><b>Definition:</b> <a href="compressed__column_8hpp_source.htm#l00058">compressed_column.hpp:58</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a9e2b47fc7b5f933767f0a5895ee9b386"><div class="ttname"><a href="namespaceCoGaDB.htm#a9e2b47fc7b5f933767f0a5895ee9b386">CoGaDB::CompressedDoubleColumn</a></div><div class="ttdeci">CompressedColumn&lt; double &gt; CompressedDoubleColumn</div><div class="ttdef"><b>Definition:</b> <a href="compressed__column_8hpp_source.htm#l00057">compressed_column.hpp:57</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm"><div class="ttname"><a href="namespaceCoGaDB.htm">CoGaDB</a></div><div class="ttdoc">The global namespace of the programming tasks, to avoid name claches with other libraries. </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8cpp_source.htm#l00008">base_column.cpp:8</a></div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_acc4ba721be59d5f3b2049031bd52df74"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#acc4ba721be59d5f3b2049031bd52df74">CoGaDB::CompressedColumn::insert</a></div><div class="ttdeci">virtual bool insert(const boost::any &amp;new_Value)=0</div><div class="ttdoc">appends a value new_Value to end of column </div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_a9058fe90f0081e187288c071d099ef61"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#a9058fe90f0081e187288c071d099ef61">CoGaDB::CompressedColumn::store</a></div><div class="ttdeci">virtual bool store(const std::string &amp;path)=0</div><div class="ttdoc">store a column on the disc </div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_a8c8300485edffa6846da7907a4978053"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#a8c8300485edffa6846da7907a4978053">CoGaDB::CompressedColumn::clearContent</a></div><div class="ttdeci">virtual bool clearContent()=0</div><div class="ttdoc">deletes all values stored in the column </div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_ad1805b7bec6013529aa2aaa17117d08b"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#ad1805b7bec6013529aa2aaa17117d08b">CoGaDB::CompressedColumn::print</a></div><div class="ttdeci">virtual void print() const =0</div><div class="ttdoc">prints the content of a column </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a87401571c18eb717e2135969e67a0cf2"><div class="ttname"><a href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">CoGaDB::TID</a></div><div class="ttdeci">unsigned int TID</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00046">global_definitions.hpp:46</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm">CoGaDB::ColumnBaseTyped</a></div><div class="ttdoc">This class represents a column with type T, is the base class for all typed column classes and allows...</div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00033">column_base_typed.hpp:33</a></div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_a1a55526893e244c1642d79854d6849da"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#a1a55526893e244c1642d79854d6849da">CoGaDB::CompressedColumn::operator[]</a></div><div class="ttdeci">virtual T &amp; operator[](const int index)=0</div><div class="ttdoc">defines operator[] for this class, which enables the user to thread all typed columns as arrays...</div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_a293ce43770e123dcffad899281865a73"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#a293ce43770e123dcffad899281865a73">CoGaDB::CompressedColumn::getSizeinBytes</a></div><div class="ttdeci">virtual unsigned int getSizeinBytes() const =0</div><div class="ttdoc">returns the size in bytes the column consumes in main memory </div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_a313dfb52faac7302baf34357cc6aa6e8"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#a313dfb52faac7302baf34357cc6aa6e8">CoGaDB::CompressedColumn::copy</a></div><div class="ttdeci">virtual const ColumnPtr copy() const =0</div><div class="ttdoc">virtual copy constructor </div></div>
<div class="ttc" id="classCoGaDB_1_1CompressedColumn_htm_a262285e6e9f5e9da0af460766d978e5f"><div class="ttname"><a href="classCoGaDB_1_1CompressedColumn.htm#a262285e6e9f5e9da0af460766d978e5f">CoGaDB::CompressedColumn::CompressedColumn</a></div><div class="ttdeci">CompressedColumn(const std::string &amp;name, AttributeType db_type)</div><div class="ttdef"><b>Definition:</b> <a href="compressed__column_8hpp_source.htm#l00065">compressed_column.hpp:65</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Apr 1 2017 14:11:30 for Database Implementation Techniques Programming Task SoSe2016 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
