<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Database Implementation Techniques Programming Task SoSe2016: Documentation</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Database Implementation Techniques Programming Task SoSe2016
   </div>
   <div id="projectbrief">DB2 Programming Task SoSe2016</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li class="current"><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Documentation </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><h1><a class="anchor" id="intro_sec"></a>
Introduction</h1>
<p>This is the documentation of the programming project for the exercises in the Lecture 'Databases Implementation Techniques' (DB2) in summer term 2016. You can find general information about the lecture <a href="http://wwwiti.cs.uni-magdeburg.de/iti_db/lehre/db2/ss2016/">here</a>.</p>
<h1><a class="anchor" id="tasks_sec"></a>
Tasks</h1>
<p>The purpose of the programming tasks is to deepen your knowledge in selected aspects of the lecture. This year, we decided to set this focus on compression techniques in column oriented database management systems. Furthermore, we choose C++ as programming language, because it is the most frequently used programming language for database management systems (except C). The task is to implement compression techniques in our framework. We provide a set of classes as presetting, where you have to include an implementation w.r.t. an interface. You can download the sources <a href="http://wwwiti.cs.uni-magdeburg.de/iti_db/lehre/db2/ss2016/programming_task/db2_programming_project_SoSe2016.zip">here</a>. A set of unit tests will help you during the development process to identify errors. The same unit tests will be used at the end of the term to validate your solution. A working implementation is a necessary prerequisite to participate in the exam!</p>
<p>You may choose between the following compression techniques (you may suggest other compression techniques as well):</p><ul>
<li>Run Length Encoding</li>
<li>Delta Coding</li>
<li>Bit-Vector Encoding</li>
<li>Dictionary Encoding</li>
<li>Frequency Partitioning</li>
</ul>
<p>All compression techniques are explained in the lecture. You can find the slides <a href="http://wwwiti.cs.uni-magdeburg.de/iti_db/lehre/db2/ss2016/slides/teil2.pdf">here</a>.</p>
<h1><a class="anchor" id="orga_sec"></a>
Organization</h1>
<p>Students will form teams of two students each. In case the exercise has an uneven number of participants, one team may consist of three students. Please register your team until the <b>29.04.2016</b> via email to: <a href="#" onclick="location.href='mai'+'lto:'+'and'+'re'+'as.'+'me'+'ist'+'er'+'@it'+'i.'+'cs.'+'un'+'i-m'+'ag'+'deb'+'ur'+'g.d'+'e'; return false;">andre<span style="display: none;">.nosp@m.</span>as.m<span style="display: none;">.nosp@m.</span>eiste<span style="display: none;">.nosp@m.</span>r@it<span style="display: none;">.nosp@m.</span>i.cs.<span style="display: none;">.nosp@m.</span>uni-<span style="display: none;">.nosp@m.</span>magde<span style="display: none;">.nosp@m.</span>burg<span style="display: none;">.nosp@m.</span>.de</a>, subject: DB2-2016 Programmierprojekt Anmeldung. Content: For each team member, we need to know the name, matrikel number, and email adress.</p>
<p>Solutions are to be submitted via email to: <a href="#" onclick="location.href='mai'+'lto:'+'and'+'re'+'as.'+'me'+'ist'+'er'+'@it'+'i.'+'cs.'+'un'+'i-m'+'ag'+'deb'+'ur'+'g.d'+'e'; return false;">andre<span style="display: none;">.nosp@m.</span>as.m<span style="display: none;">.nosp@m.</span>eiste<span style="display: none;">.nosp@m.</span>r@it<span style="display: none;">.nosp@m.</span>i.cs.<span style="display: none;">.nosp@m.</span>uni-<span style="display: none;">.nosp@m.</span>magde<span style="display: none;">.nosp@m.</span>burg<span style="display: none;">.nosp@m.</span>.de</a>, subject: DB2-2016 Programmierprojekt Abgabe. The deadline is the 03.07.2016 at 23:59 o'clock. Note that the deadline is strict, there will be <b>no</b> deadline extension.</p>
<p>Solutions will be presented and discussed by each team in the exercise.</p>
<p>Teams consisting of bachelor students have to implement <b>two</b> compression techniques and will receive 5 credit points when they pass the exam. Teams consisting of master students have to implement <b>three</b> compression techniques, because they will receive 6 credit points when they pass the exam.</p>
<p>We will check the quality of your submitted solution. It has to pass the unit tests, implement the compression technique it represents, and may not be a copy of a solution submitted by another team or any third party implementation. Solutions who fail to fulfill only one of these requirements will not be able to participate in the exam.</p>
<h1><a class="anchor" id="setup_sec"></a>
Setup and Tools</h1>
<p>The framework runs on Linux and Windows (cygwin) with common C++ compilers (g++, clang). You need to install the boost libraries (Serialization, Any), which can be installed easily on Linux and Windows (cygwin).</p>
<h2><a class="anchor" id="ubuntu_subsec"></a>
Setup in Ubuntu</h2>
<p>Open a terminal and type: </p><div class="fragment"><div class="line">sudo apt-<span class="keyword">get</span> install build-essential libboost-all-dev doxygen </div></div><!-- fragment --><p>Then, enter the directory you unpacked the archive with the source code and type the following commands to build the program, the documentation and run the program: </p><div class="fragment"><div class="line">cd db2_programming_project_SoSe2016</div><div class="line">make</div><div class="line">make documentation</div><div class="line">make run</div></div><!-- fragment --><h2><a class="anchor" id="cygwin_subsec"></a>
Setup for Windows (Cygwin)</h2>
<p>As for Windows (cygwin), you need to install the necessary packages using the GUI of the cygwin setup program, which you can download on the <a href="http://www.cygwin.com/">official website</a>. You should install the latest version of the boost libraries, the compiler you wish to use (e.g., g++, clang), the make program, as well as a tool to unpack the source archive. The build steps are the same as for Ubuntu.</p>
<h1><a class="anchor" id="getting_started_sec"></a>
Getting Started</h1>
<p>To implement your selected compression technique, you have to inherit from the base class <a class="el" href="classCoGaDB_1_1CompressedColumn.htm">CoGaDB::CompressedColumn</a> and implement it's pure virtual methods (similar to an abstract method in Java). You can test your class by creating an instance and pass a pointer to the <a class="el" href="unittest_8hpp.htm#aaaeb93e760618e60dbee3fdfbdc76967">unittest</a> function. We prepared an example in the project, the <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm" title="This class represents a dictionary compressed column with type T, is the base class for all compresse...">CoGaDB::DictionaryCompressedColumn</a>, which is stored in the file compression <a class="el" href="dictionary_compressed_column_8hpp-example.htm">dictionary_compressed_column.hpp</a>.</p>
<h1><a class="anchor" id="cpp_background_sec"></a>
C++ Background</h1>
<p>You should familiarize yourself with the following features of the C++ language:</p><ul>
<li>pointers, references, and <a href="http://www.informit.com/articles/article.aspx?p=25264">smart pointers</a> (we use the shared_ptr implementation of <a href="http://www.boost.org/doc/libs/1_53_0/libs/smart_ptr/smart_ptr.htm">boost</a>)</li>
<li>create objects on the heap with new</li>
<li>call by value and call by reference</li>
<li>public inheritance</li>
<li>basic STL containers, such as std::vector and std::list</li>
<li>basic templates and how to use them</li>
</ul>
<p>You can find a lot of useful examples in the framework code, e.g., the unit tests.</p>
<p>Recommended (selected) sources of information about C++ are:</p><ul>
<li><a href="http://www.cplusplus.com/">http://www.cplusplus.com/</a></li>
<li>Bjarne Stroustrup. The C++ Programming Language. Addison-Wesley, 4th edition, 2013</li>
<li>Scott Meyers. Effective C++: 55 Specific Ways to Improve Your Programs and Designs, Addison-Wesley, 3rd edition, 2005 </li>
</ul>
</div></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Apr 1 2017 14:11:30 for Database Implementation Techniques Programming Task SoSe2016 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
