<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Database Implementation Techniques Programming Task SoSe2016: base_column.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Database Implementation Techniques Programming Task SoSe2016
   </div>
   <div id="projectbrief">DB2 Programming Task SoSe2016</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4270bfced15e0e73154b13468c7c9ad9.htm">core</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">base_column.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="base__column_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//STL includes</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//boost includes</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;boost/archive/binary_oarchive.hpp&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;boost/archive/binary_iarchive.hpp&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;boost/serialization/binary_object.hpp&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;boost/serialization/vector.hpp&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;boost/serialization/list.hpp&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//CoGaDB includes</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="global__definitions_8hpp.htm">core/global_definitions.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceCoGaDB.htm">CoGaDB</a>{</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">/* \brief a PositionList is an STL vector of TID values*/</span></div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">   16</a></span>&#160;<span class="keyword">typedef</span> std::vector&lt;TID&gt; <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* \brief a PositionListPtr is a a references counted smart pointer to a PositionList object*/</span></div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">   18</a></span>&#160;<span class="keyword">typedef</span> shared_pointer_namespace::shared_ptr&lt;PositionList&gt; <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/* \brief a PositionListPair is an STL pair consisting of two PositionListPtr objects</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  \details This type is returned by binary operators, e.g., joins*/</span></div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#ad25a5198c5815e9eddddc65c1f156b2e">   21</a></span>&#160;<span class="keyword">typedef</span> std::pair&lt;PositionListPtr,PositionListPtr&gt; <a class="code" href="namespaceCoGaDB.htm#ad25a5198c5815e9eddddc65c1f156b2e">PositionListPair</a>;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">/* \brief a PositionListPairPtr is a a references counted smart pointer to a PositionListPair object*/</span></div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">   23</a></span>&#160;<span class="keyword">typedef</span> shared_pointer_namespace::shared_ptr&lt;PositionListPair&gt; <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">class </span>Table; <span class="comment">//forward declaration</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBase.htm">   38</a></span>&#160;<span class="keyword">class </span><a class="code" href="classCoGaDB_1_1ColumnBase.htm">ColumnBase</a>{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">   41</a></span>&#160;        <span class="keyword">typedef</span> shared_pointer_namespace::shared_ptr&lt;ColumnBase&gt; <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="comment">/***************** constructors and destructor *****************/</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a7952cc631416caa4c03523daeb66954e">ColumnBase</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a496bb224058ea81d70617fa851308306">~ColumnBase</a>();</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="comment">/***************** methods *****************/</span>   </div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#adbb7a3275d4e1c5634b5af969f82cfae">insert</a>(<span class="keyword">const</span> boost::any&amp; new_Value)=0;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a791400c0d1a3b91ef3fa8ca3f37956b9">update</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid, <span class="keyword">const</span> boost::any&amp; new_Value)=0;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a791400c0d1a3b91ef3fa8ca3f37956b9">update</a>(PositionListPtr tids, <span class="keyword">const</span> boost::any&amp; new_value) = 0;             </div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)=0;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(PositionListPtr tid)=0;     </div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#aaa5a675946ca7ec7b44b843a76927745">clearContent</a>()=0;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> boost::any <span class="keyword">get</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)=0; <span class="comment">//not const, because operator [] does not provide const return type and the child classes rely on []</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"></span>        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ac4bb2af029ab94ba3689cfd1864e4e6c">print</a>() <span class="keyword">const</span> throw()=0;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        virtual <span class="keywordtype">size_t</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a0101453631de8ff59ffc24eed760d81d">size</a>() const throw()=0;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        virtual <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ab7f43b8bc8bb5956df6e2b5256193bc3">getSizeinBytes</a>() const throw()=0;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        virtual const ColumnPtr <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a44ce38ba1b6f9d0f23f780ca42123284">copy</a>() const=0;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="comment">/***************** relational operations on Columns which return a PositionListPtr/PositionListPairPtr *****************/</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        virtual const PositionListPtr <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ab03331430756cc4080800cf4eb1cf4ae">sort</a>(<a class="code" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5">SortOrder</a> order=<a class="code" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5aac7a3b8f2752e8a54ea32049c0d8de36">ASCENDING</a>)= 0; </div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        virtual const PositionListPtr <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a943315677651ad20b91400a40cca2e08">selection</a>(const <a class="code" href="namespaceboost.htm">boost</a>::any&amp; value_for_comparison, const <a class="code" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a> comp)= 0;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        virtual const PositionListPtr <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a3368c3e420a2d0456183007b1edde238">parallel_selection</a>(const <a class="code" href="namespaceboost.htm">boost</a>::any&amp; value_for_comparison, const <a class="code" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a> comp, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> number_of_threads) = 0;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        virtual const PositionListPairPtr <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a71ef9d91dace96d0ce47ed9cdab552d0">hash_join</a>(ColumnPtr join_column)=0;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        virtual const PositionListPairPtr <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a8b1b5878495d33efe00e163e9f64b449">sort_merge_join</a>(ColumnPtr join_column)=0;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        virtual const PositionListPairPtr <a class="code" href="classCoGaDB_1_1ColumnBase.htm#acde1f36d5fe42e09ae4561eebee1b438">nested_loop_join</a>(ColumnPtr join_column)=0;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="comment">/***************** column algebra operations *****************/</span> </div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a320ad0009caf49680ecaf4c062fba500">add</a>(const <a class="code" href="namespaceboost.htm">boost</a>::any&amp; new_Value) = 0;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a320ad0009caf49680ecaf4c062fba500">add</a>(ColumnPtr column) = 0;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#add9deb21f77a3e6d0a785018f7c5ad8c">minus</a>(const <a class="code" href="namespaceboost.htm">boost</a>::any&amp; new_Value) = 0;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#add9deb21f77a3e6d0a785018f7c5ad8c">minus</a>(ColumnPtr column) = 0;       </div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a08c2ef362738b6ce3f4eba429911b7e2">multiply</a>(const <a class="code" href="namespaceboost.htm">boost</a>::any&amp; new_Value) = 0;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a08c2ef362738b6ce3f4eba429911b7e2">multiply</a>(ColumnPtr column) = 0;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#acb6c8321b6451c2bef58936e623b328c">division</a>(const <a class="code" href="namespaceboost.htm">boost</a>::any&amp; new_Value) = 0; </div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#acb6c8321b6451c2bef58936e623b328c">division</a>(ColumnPtr column) = 0;    </div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="comment">/***************** persistency operations *****************/</span>            </div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a6c4176f8f8d93e7694e0a52284bd98cf">store</a>(const <a class="code" href="namespacestd.htm">std</a>::<span class="keywordtype">string</span>&amp; path) = 0;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a84c32d3ed8b6570e3c9d190a85dfdfbd">load</a>(const <a class="code" href="namespacestd.htm">std</a>::<span class="keywordtype">string</span>&amp; path) = 0;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="comment">/***************** misc operations *****************/</span>   </div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a15a93d403eea75c1050d73b708c7c7cd">isMaterialized</a>() const  throw() = 0;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        virtual <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a007460a4371ac5a9d21de9584e117e88">isCompressed</a>() const  throw() = 0; </div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        virtual const <a class="code" href="namespacestd.htm">std</a>::type_info&amp; <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a025b63767aae6e1ab2c772689a4a0033">type</a>() const throw() = 0;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#abb0aa5bd957c60e6162e37ea81506b12">getType</a>() const throw();</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        const <a class="code" href="namespacestd.htm">std</a>::<span class="keywordtype">string</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a7ef499aa8df1cc0b11195cf4b3b5028d">getName</a>() const throw();</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        protected:</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">  148</a></span>&#160;        <a class="code" href="namespacestd.htm">std</a>::<span class="keywordtype">string</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a>;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBase.htm#a8ef4e55c2d56db9cdb2fc8266c982691">  150</a></span>&#160;        <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a8ef4e55c2d56db9cdb2fc8266c982691">db_type_</a>;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">//      Table&amp; table_;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;};</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#a3d7ce6ae5ca4381f2b4f1db23f982c5d">  155</a></span>&#160;typedef <a class="code" href="classCoGaDB_1_1ColumnBase.htm">ColumnBase</a>::ColumnPtr ColumnPtr;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#a5386261e3f8b4d8e88366bb51388b889">  157</a></span>&#160;typedef <a class="code" href="namespacestd.htm">std</a>::vector&lt;ColumnPtr&gt; <a class="code" href="namespaceCoGaDB.htm#a5386261e3f8b4d8e88366bb51388b889">ColumnVector</a>;</div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="namespaceCoGaDB.htm#a32399dcb6ea0b0b2b1aa97418c975a13">  158</a></span>&#160;typedef <a class="code" href="namespaceboost.htm">shared_pointer_namespace</a>::shared_ptr&lt;ColumnVector&gt; <a class="code" href="namespaceCoGaDB.htm#a32399dcb6ea0b0b2b1aa97418c975a13">ColumnVectorPtr</a>;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;const ColumnPtr <a class="code" href="namespaceCoGaDB.htm#a5fdf7fd25a58db5bd904ce735a9212b7">createColumn</a>(<a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#a025b63767aae6e1ab2c772689a4a0033">type</a>, const <a class="code" href="namespacestd.htm">std</a>::<span class="keywordtype">string</span>&amp; name);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}; <span class="comment">//end namespace CogaDB</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">//extend boost namespace to add serialization feature to my own types</span></div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="namespaceboost.htm">  167</a></span>&#160;namespace <a class="code" href="namespaceboost.htm">boost</a> {</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="namespaceboost_1_1serialization.htm">  168</a></span>&#160;<span class="keyword">namespace </span>serialization {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> Archive&gt;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="namespaceboost_1_1serialization.htm#ab43be156f83f13afa80c13898f040acd">  171</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceboost_1_1serialization.htm#ab43be156f83f13afa80c13898f040acd">serialize</a>(Archive &amp; ar, std::pair&lt;CoGaDB::AttributeType,std::string&gt; &amp; pair, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ) <span class="comment">//version)</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        </div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    ar &amp; pair.first;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    ar &amp; pair.second;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    </div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;} <span class="comment">// namespace serialization</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;} <span class="comment">// namespace boost</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_acde1f36d5fe42e09ae4561eebee1b438"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#acde1f36d5fe42e09ae4561eebee1b438">CoGaDB::ColumnBase::nested_loop_join</a></div><div class="ttdeci">virtual const PositionListPairPtr nested_loop_join(ColumnPtr join_column)=0</div><div class="ttdoc">joins two columns using the nested loop join algorithm </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_ab7f43b8bc8bb5956df6e2b5256193bc3"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#ab7f43b8bc8bb5956df6e2b5256193bc3">CoGaDB::ColumnBase::getSizeinBytes</a></div><div class="ttdeci">virtual unsigned int getSizeinBytes() const =0</div><div class="ttdoc">returns the size in bytes the column consumes in main memory </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a33ccb4afa788aed82f287658a7b76d2b"><div class="ttname"><a href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">CoGaDB::PositionListPairPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; PositionListPair &gt; PositionListPairPtr</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00023">base_column.hpp:23</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a15a93d403eea75c1050d73b708c7c7cd"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a15a93d403eea75c1050d73b708c7c7cd">CoGaDB::ColumnBase::isMaterialized</a></div><div class="ttdeci">virtual bool isMaterialized() const =0</div><div class="ttdoc">use this method to determine whether the column is materialized or a Lookup Column ...</div></div>
<div class="ttc" id="namespacestd_htm"><div class="ttname"><a href="namespacestd.htm">std</a></div><div class="ttdoc">STL namespace. </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ae7e30b13ad239f7010ad333125321e9a"><div class="ttname"><a href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">CoGaDB::PositionListPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; PositionList &gt; PositionListPtr</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00018">base_column.hpp:18</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_ab03331430756cc4080800cf4eb1cf4ae"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#ab03331430756cc4080800cf4eb1cf4ae">CoGaDB::ColumnBase::sort</a></div><div class="ttdeci">virtual const PositionListPtr sort(SortOrder order=ASCENDING)=0</div><div class="ttdoc">sorts a column w.r.t. a SortOrder </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_abb0aa5bd957c60e6162e37ea81506b12"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#abb0aa5bd957c60e6162e37ea81506b12">CoGaDB::ColumnBase::getType</a></div><div class="ttdeci">AttributeType getType() const </div><div class="ttdoc">returns database type of column (as defined in &quot;SQL&quot; statement) </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8cpp_source.htm#l00016">base_column.cpp:16</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_ae8d2ac257af16e7d8bc78e1ea43cb14d"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">CoGaDB::ColumnBase::ColumnPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; ColumnBase &gt; ColumnPtr</div><div class="ttdoc">defines a smart pointer to a ColumnBase Object </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00041">base_column.hpp:41</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ad25a5198c5815e9eddddc65c1f156b2e"><div class="ttname"><a href="namespaceCoGaDB.htm#ad25a5198c5815e9eddddc65c1f156b2e">CoGaDB::PositionListPair</a></div><div class="ttdeci">std::pair&lt; PositionListPtr, PositionListPtr &gt; PositionListPair</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00021">base_column.hpp:21</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a8ef4e55c2d56db9cdb2fc8266c982691"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a8ef4e55c2d56db9cdb2fc8266c982691">CoGaDB::ColumnBase::db_type_</a></div><div class="ttdeci">AttributeType db_type_</div><div class="ttdoc">database type of the column </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00150">base_column.hpp:150</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ac53a708d27568a6584e7c03b4ab659e5"><div class="ttname"><a href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">CoGaDB::AttributeType</a></div><div class="ttdeci">AttributeType</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00016">global_definitions.hpp:16</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a84c32d3ed8b6570e3c9d190a85dfdfbd"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a84c32d3ed8b6570e3c9d190a85dfdfbd">CoGaDB::ColumnBase::load</a></div><div class="ttdeci">virtual bool load(const std::string &amp;path)=0</div><div class="ttdoc">load column from disc </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a007460a4371ac5a9d21de9584e117e88"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a007460a4371ac5a9d21de9584e117e88">CoGaDB::ColumnBase::isCompressed</a></div><div class="ttdeci">virtual bool isCompressed() const =0</div><div class="ttdoc">use this method to determine whether the column is materialized or a Lookup Column ...</div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_adbb7a3275d4e1c5634b5af969f82cfae"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#adbb7a3275d4e1c5634b5af969f82cfae">CoGaDB::ColumnBase::insert</a></div><div class="ttdeci">virtual bool insert(const boost::any &amp;new_Value)=0</div><div class="ttdoc">appends a value new_Value to end of column </div></div>
<div class="ttc" id="namespaceboost_htm"><div class="ttname"><a href="namespaceboost.htm">boost</a></div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00167">base_column.hpp:167</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm"><div class="ttname"><a href="namespaceCoGaDB.htm">CoGaDB</a></div><div class="ttdoc">The global namespace of the programming tasks, to avoid name claches with other libraries. </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8cpp_source.htm#l00008">base_column.cpp:8</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a025b63767aae6e1ab2c772689a4a0033"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a025b63767aae6e1ab2c772689a4a0033">CoGaDB::ColumnBase::type</a></div><div class="ttdeci">virtual const std::type_info &amp; type() const =0</div><div class="ttdoc">returns type information of internal values </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a496bb224058ea81d70617fa851308306"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a496bb224058ea81d70617fa851308306">CoGaDB::ColumnBase::~ColumnBase</a></div><div class="ttdeci">virtual ~ColumnBase()</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8cpp_source.htm#l00014">base_column.cpp:14</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a71ef9d91dace96d0ce47ed9cdab552d0"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a71ef9d91dace96d0ce47ed9cdab552d0">CoGaDB::ColumnBase::hash_join</a></div><div class="ttdeci">virtual const PositionListPairPtr hash_join(ColumnPtr join_column)=0</div><div class="ttdoc">joins two columns using the hash join algorithm </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_add9deb21f77a3e6d0a785018f7c5ad8c"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#add9deb21f77a3e6d0a785018f7c5ad8c">CoGaDB::ColumnBase::minus</a></div><div class="ttdeci">virtual bool minus(const boost::any &amp;new_Value)=0</div><div class="ttdoc">substracts constant from column </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a3903511755e2c745226394b999ddb8a8"><div class="ttname"><a href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">CoGaDB::PositionList</a></div><div class="ttdeci">std::vector&lt; TID &gt; PositionList</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00016">base_column.hpp:16</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a44ce38ba1b6f9d0f23f780ca42123284"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a44ce38ba1b6f9d0f23f780ca42123284">CoGaDB::ColumnBase::copy</a></div><div class="ttdeci">virtual const ColumnPtr copy() const =0</div><div class="ttdoc">virtual copy constructor </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_aeea69c893912bd4994fd616b189db4d4"><div class="ttname"><a href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">CoGaDB::ValueComparator</a></div><div class="ttdeci">ValueComparator</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00022">global_definitions.hpp:22</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a32399dcb6ea0b0b2b1aa97418c975a13"><div class="ttname"><a href="namespaceCoGaDB.htm#a32399dcb6ea0b0b2b1aa97418c975a13">CoGaDB::ColumnVectorPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; ColumnVector &gt; ColumnVectorPtr</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00158">base_column.hpp:158</a></div></div>
<div class="ttc" id="namespaceboost_1_1serialization_htm_ab43be156f83f13afa80c13898f040acd"><div class="ttname"><a href="namespaceboost_1_1serialization.htm#ab43be156f83f13afa80c13898f040acd">boost::serialization::serialize</a></div><div class="ttdeci">void serialize(Archive &amp;ar, std::pair&lt; CoGaDB::AttributeType, std::string &gt; &amp;pair, const unsigned int)</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00171">base_column.hpp:171</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a7952cc631416caa4c03523daeb66954e"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a7952cc631416caa4c03523daeb66954e">CoGaDB::ColumnBase::ColumnBase</a></div><div class="ttdeci">ColumnBase(const std::string &amp;name, AttributeType db_type)</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8cpp_source.htm#l00010">base_column.cpp:10</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a87401571c18eb717e2135969e67a0cf2"><div class="ttname"><a href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">CoGaDB::TID</a></div><div class="ttdeci">unsigned int TID</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00046">global_definitions.hpp:46</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a8b1b5878495d33efe00e163e9f64b449"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a8b1b5878495d33efe00e163e9f64b449">CoGaDB::ColumnBase::sort_merge_join</a></div><div class="ttdeci">virtual const PositionListPairPtr sort_merge_join(ColumnPtr join_column)=0</div><div class="ttdoc">joins two columns using the sort merge join algorithm </div></div>
<div class="ttc" id="global__definitions_8hpp_htm"><div class="ttname"><a href="global__definitions_8hpp.htm">global_definitions.hpp</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_ac4bb2af029ab94ba3689cfd1864e4e6c"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#ac4bb2af029ab94ba3689cfd1864e4e6c">CoGaDB::ColumnBase::print</a></div><div class="ttdeci">virtual void print() const =0</div><div class="ttdoc">prints the content of a column </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a5386261e3f8b4d8e88366bb51388b889"><div class="ttname"><a href="namespaceCoGaDB.htm#a5386261e3f8b4d8e88366bb51388b889">CoGaDB::ColumnVector</a></div><div class="ttdeci">std::vector&lt; ColumnPtr &gt; ColumnVector</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00157">base_column.hpp:157</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_aaa5a675946ca7ec7b44b843a76927745"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#aaa5a675946ca7ec7b44b843a76927745">CoGaDB::ColumnBase::clearContent</a></div><div class="ttdeci">virtual bool clearContent()=0</div><div class="ttdoc">deletes all values stored in the column </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a6c4176f8f8d93e7694e0a52284bd98cf"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a6c4176f8f8d93e7694e0a52284bd98cf">CoGaDB::ColumnBase::store</a></div><div class="ttdeci">virtual bool store(const std::string &amp;path)=0</div><div class="ttdoc">store a column on the disc </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a08c2ef362738b6ce3f4eba429911b7e2"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a08c2ef362738b6ce3f4eba429911b7e2">CoGaDB::ColumnBase::multiply</a></div><div class="ttdeci">virtual bool multiply(const boost::any &amp;new_Value)=0</div><div class="ttdoc">multiply constant with column </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a791400c0d1a3b91ef3fa8ca3f37956b9"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a791400c0d1a3b91ef3fa8ca3f37956b9">CoGaDB::ColumnBase::update</a></div><div class="ttdeci">virtual bool update(TID tid, const boost::any &amp;new_Value)=0</div><div class="ttdoc">updates the value on position tid with a value new_Value </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a320ad0009caf49680ecaf4c062fba500"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a320ad0009caf49680ecaf4c062fba500">CoGaDB::ColumnBase::add</a></div><div class="ttdeci">virtual bool add(const boost::any &amp;new_Value)=0</div><div class="ttdoc">adds constant to column </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a4da9b0c7d2a04facb7e4834b8cb86aa5aac7a3b8f2752e8a54ea32049c0d8de36"><div class="ttname"><a href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5aac7a3b8f2752e8a54ea32049c0d8de36">CoGaDB::ASCENDING</a></div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00024">global_definitions.hpp:24</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm">CoGaDB::ColumnBase</a></div><div class="ttdoc">This class represents a generic column, is the base class for all column classes and allows a uniform...</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00038">base_column.hpp:38</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_acb6c8321b6451c2bef58936e623b328c"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#acb6c8321b6451c2bef58936e623b328c">CoGaDB::ColumnBase::division</a></div><div class="ttdeci">virtual bool division(const boost::any &amp;new_Value)=0</div><div class="ttdoc">devide values in column by a constant </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_adde5ec5902be1d18cc625cc41526e241"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">CoGaDB::ColumnBase::name_</a></div><div class="ttdeci">std::string name_</div><div class="ttdoc">attribute name of the column </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00148">base_column.hpp:148</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a5fdf7fd25a58db5bd904ce735a9212b7"><div class="ttname"><a href="namespaceCoGaDB.htm#a5fdf7fd25a58db5bd904ce735a9212b7">CoGaDB::createColumn</a></div><div class="ttdeci">const ColumnPtr createColumn(AttributeType type, const std::string &amp;name)</div><div class="ttdoc">Column factory function, creates an empty materialized column. </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8cpp_source.htm#l00024">base_column.cpp:24</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a4da9b0c7d2a04facb7e4834b8cb86aa5"><div class="ttname"><a href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5">CoGaDB::SortOrder</a></div><div class="ttdeci">SortOrder</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00024">global_definitions.hpp:24</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a7ef499aa8df1cc0b11195cf4b3b5028d"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a7ef499aa8df1cc0b11195cf4b3b5028d">CoGaDB::ColumnBase::getName</a></div><div class="ttdeci">const std::string getName() const </div><div class="ttdoc">returns attribute name of column </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8cpp_source.htm#l00020">base_column.cpp:20</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a3368c3e420a2d0456183007b1edde238"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a3368c3e420a2d0456183007b1edde238">CoGaDB::ColumnBase::parallel_selection</a></div><div class="ttdeci">virtual const PositionListPtr parallel_selection(const boost::any &amp;value_for_comparison, const ValueComparator comp, unsigned int number_of_threads)=0</div><div class="ttdoc">filters the values of a column in parallel according to a filter condition consisting of a comparison...</div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a0101453631de8ff59ffc24eed760d81d"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a0101453631de8ff59ffc24eed760d81d">CoGaDB::ColumnBase::size</a></div><div class="ttdeci">virtual size_t size() const =0</div><div class="ttdoc">returns the number of values (rows) in a column </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_a943315677651ad20b91400a40cca2e08"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#a943315677651ad20b91400a40cca2e08">CoGaDB::ColumnBase::selection</a></div><div class="ttdeci">virtual const PositionListPtr selection(const boost::any &amp;value_for_comparison, const ValueComparator comp)=0</div><div class="ttdoc">filters the values of a column according to a filter condition consisting of a comparison value and a...</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Apr 1 2017 14:11:30 for Database Implementation Techniques Programming Task SoSe2016 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
