<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Database Implementation Techniques Programming Task SoSe2016: column_base_typed.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Database Implementation Techniques Programming Task SoSe2016
   </div>
   <div id="projectbrief">DB2 Programming Task SoSe2016</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4270bfced15e0e73154b13468c7c9ad9.htm">core</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">column_base_typed.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="column__base__typed_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="base__column_8hpp.htm">core/base_column.hpp</a>&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;boost/unordered_map.hpp&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;boost/any.hpp&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//#include &lt;core/column.hpp&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceCoGaDB.htm">CoGaDB</a>{</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm">   33</a></span>&#160;<span class="keyword">class </span><a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped</a> : <span class="keyword">public</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm">ColumnBase</a>{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="comment">//typedef boost::shared_ptr&lt;ColumnBaseTyped&gt; ColumnPtr;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="comment">/***************** constructors and destructor *****************/</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a88a1615b9b32ea4afdde6b06985dffaf">ColumnBaseTyped</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#aab999a6f505e6b715290766557b25552">~ColumnBaseTyped</a>();</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a298584fc2f5bdaea233194ab6b6b0834">insert</a>(<span class="keyword">const</span> boost::any&amp; new_Value)=0;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a298584fc2f5bdaea233194ab6b6b0834">insert</a>(<span class="keyword">const</span> T&amp; new_Value)=0;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac8b41ece275215ee6ca82d57294f1bb9">update</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid, <span class="keyword">const</span> boost::any&amp; new_value) = 0;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac8b41ece275215ee6ca82d57294f1bb9">update</a>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid, <span class="keyword">const</span> boost::any&amp; new_value) = 0;      </div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        </div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)=0;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="comment">//assumes tid list is sorted ascending</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid)=0;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#aef36a1764886ea25e05ba098571fa711">clearContent</a>()=0;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> boost::any <span class="keyword">get</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)=0;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="comment">//virtual const boost::any* const getRawData()=0;</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac87ff73aa6d72bbf3b5ae510327e22c6">print</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>()=0;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">size_t</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>()=0;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#ae990bc63aca6d10e6c25fc55f0d8de15">getSizeinBytes</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>()=0;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a811d44896f4edb003b9bad6e619a24c9">copy</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="comment">/***************** relational operations on Columns which return lookup tables *****************/</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac2c0472e88ed4c14d10a879a6646c3f2">sort</a>(<a class="code" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5">SortOrder</a> order); </div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a91c27b988eb79cca9163a82492936814">selection</a>(<span class="keyword">const</span> boost::any&amp; value_for_comparison, <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a> comp);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a11b4618c929dcc789191bc6c2aa48068">parallel_selection</a>(<span class="keyword">const</span> boost::any&amp; value_for_comparison, <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a> comp, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> number_of_threads);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="comment">//join algorithms</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac66da4e2c203ff8ca673c19242a7e766">hash_join</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a477d9ba1373752a95eabf0fa429b06d4">sort_merge_join</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a10457ede9dda1c5cfc120fad77b36d04">nested_loop_join</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#abe0449e21775f7b45c4bf78b92a10c7d">add</a>(<span class="keyword">const</span> boost::any&amp; new_Value);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment">//vector addition between columns                       </span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#abe0449e21775f7b45c4bf78b92a10c7d">add</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a517e7c030036165fc07f38a871f09550">minus</a>(<span class="keyword">const</span> boost::any&amp; new_Value);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a517e7c030036165fc07f38a871f09550">minus</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column);      </div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a629b2349ed7289016f9ea1cf2d8e69ac">multiply</a>(<span class="keyword">const</span> boost::any&amp; new_Value);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a629b2349ed7289016f9ea1cf2d8e69ac">multiply</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a7c603f30ff974d76878a2d24fc863df6">division</a>(<span class="keyword">const</span> boost::any&amp; new_Value);     </div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a7c603f30ff974d76878a2d24fc863df6">division</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column);   </div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment">//template &lt;typename U, typename BinaryOperator&gt;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="comment">//std::pair&lt;ColumnPtr,ColumnPtr&gt; aggregate_by_keys(ColumnBaseTyped&lt;U&gt;* keys, BinaryOperator binary_op) const;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8b170edcae21575ea41c55df2c63e823">store</a>(<span class="keyword">const</span> std::string&amp; path) = 0;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a5ddfa2dbe32f62d7a12bd0edf5f6ccd2">load</a>(<span class="keyword">const</span> std::string&amp; path) = 0;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#aeeb1eb6d5b3c4c421aa79bb5584da856">isMaterialized</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>() = 0;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#acb4e29d5b1fb0bb8c1f3ec968311ebba">isCompressed</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>() = 0; </div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> std::type_info&amp; <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a15ad2a4372a39ea9a450897534db24d2">type</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keyword">virtual</span> T&amp; <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">operator[]</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> index) = 0;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a73a3921727fb8a5be6a81958b1a4e4d6">operator==</a>(<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped&lt;T&gt;</a>&amp; column);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;};</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a88a1615b9b32ea4afdde6b06985dffaf">   99</a></span>&#160;        <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a88a1615b9b32ea4afdde6b06985dffaf">ColumnBaseTyped&lt;T&gt;::ColumnBaseTyped</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type) : <a class="code" href="classCoGaDB_1_1ColumnBase.htm">ColumnBase</a>(name,db_type){</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#aab999a6f505e6b715290766557b25552">  104</a></span>&#160;        <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#aab999a6f505e6b715290766557b25552">ColumnBaseTyped&lt;T&gt;::~ColumnBaseTyped</a>(){</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a15ad2a4372a39ea9a450897534db24d2">  109</a></span>&#160;<span class="keyword">const</span> std::type_info&amp; <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a15ad2a4372a39ea9a450897534db24d2">ColumnBaseTyped&lt;T&gt;::type</a>() <span class="keyword">const</span> throw(){</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">typeid</span>(T);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac2c0472e88ed4c14d10a879a6646c3f2">  114</a></span>&#160;<span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac2c0472e88ed4c14d10a879a6646c3f2">ColumnBaseTyped&lt;T&gt;::sort</a>(<a class="code" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5">SortOrder</a> order){</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> ids = <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>());</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                std::vector&lt;std::pair&lt;T,TID&gt; &gt; v;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        v.push_back (std::pair&lt;T,TID&gt;((*<span class="keyword">this</span>)[i],i) );</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <span class="comment">//TODO: change implementation, so that no copy operations are required -&gt; use boost zip iterators!</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <span class="keywordflow">if</span>(order==<a class="code" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5aac7a3b8f2752e8a54ea32049c0d8de36">ASCENDING</a>){</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        <span class="comment">//tbb::parallel_sort(v.begin(),v.end(),std::less_equal&lt;std::pair&lt;T,TID&gt; &gt;());</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                        std::stable_sort(v.begin(),v.end(),std::less_equal&lt;std::pair&lt;T,TID&gt; &gt;());</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                }<span class="keywordflow">else</span> <span class="keywordflow">if</span>(order==<a class="code" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5a15fe94b9b15cdeb0473d054f8ae21fbd">DESCENDING</a>){</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                        <span class="comment">//tbb::parallel_sort(v.begin(),v.end(),std::greater_equal&lt;std::pair&lt;T,TID&gt; &gt;());</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                        std::stable_sort(v.begin(),v.end(),std::greater_equal&lt;std::pair&lt;T,TID&gt; &gt;()); </div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                }<span class="keywordflow">else</span>{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                        std::cout &lt;&lt; <span class="stringliteral">&quot;FATAL ERROR: ColumnBaseTyped&lt;T&gt;::sort(): Unknown Sorting Order!&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;v.size();i++){</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                        ids-&gt;push_back(v[i].second);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                <span class="keywordflow">return</span> ids;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a11b4618c929dcc789191bc6c2aa48068">  144</a></span>&#160;<span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a11b4618c929dcc789191bc6c2aa48068">ColumnBaseTyped&lt;T&gt;::parallel_selection</a>(<span class="keyword">const</span> boost::any&amp;, <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>){</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> result_tids( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>());</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">return</span> result_tids;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a91c27b988eb79cca9163a82492936814">  154</a></span>&#160;<span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a91c27b988eb79cca9163a82492936814">ColumnBaseTyped&lt;T&gt;::selection</a>(<span class="keyword">const</span> boost::any&amp; value_for_comparison, <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a> comp){</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">if</span>(value_for_comparison.type()!=<span class="keyword">typeid</span>(T)){</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                        std::cout &lt;&lt; <span class="stringliteral">&quot;Fatal Error!!! Typemismatch for column &quot;</span> &lt;&lt; <a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a> &lt;&lt; std::endl;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                        std::cout &lt;&lt; <span class="stringliteral">&quot;File: &quot;</span> &lt;&lt; __FILE__ &lt;&lt; <span class="stringliteral">&quot; Line: &quot;</span> &lt;&lt; __LINE__ &lt;&lt; std::endl;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                        exit(-1);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                        </div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                T value = boost::any_cast&lt;T&gt;(value_for_comparison);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        </div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> result_tids;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                result_tids = <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>(<span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>());</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                                <span class="keywordflow">if</span>(!<a class="code" href="namespaceCoGaDB.htm#a256e6fd79fe870ea16ee7fe0c8c3d7afa3c0eed2506e9aefb8851072a6a37a533">quiet</a>) std::cout &lt;&lt; <span class="stringliteral">&quot;Using CPU for Selection...&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                <span class="keywordflow">for</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                </div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                        <span class="comment">//boost::any value = column-&gt;get(i);</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                        <span class="comment">//val = values_[i];</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                        </div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                        <span class="keywordflow">if</span>(comp==<a class="code" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4acd922965ccf5d670a7096870ad06a883">EQUAL</a>){</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                        <span class="keywordflow">if</span>(value==(*<span class="keyword">this</span>)[i]){</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                                <span class="comment">//result_table-&gt;insert(this-&gt;fetchTuple(i));</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                                result_tids-&gt;push_back(i);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                        }</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                        }<span class="keywordflow">else</span> <span class="keywordflow">if</span>(comp==<a class="code" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4a75a994dfca60310f3806fea61ecfd007">LESSER</a>){</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                        <span class="keywordflow">if</span>((*<span class="keyword">this</span>)[i]&lt;value){</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                                <span class="comment">//result_table-&gt;insert(this-&gt;fetchTuple(i));</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                                result_tids-&gt;push_back(i);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                        }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                        }<span class="keywordflow">else</span> <span class="keywordflow">if</span>(comp==<a class="code" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4a0df6227c010292cc19f175c19bc8683a">GREATER</a>){</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                        <span class="keywordflow">if</span>((*<span class="keyword">this</span>)[i]&gt;value){</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                                result_tids-&gt;push_back(i);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                                <span class="comment">//result_table-&gt;insert(this-&gt;fetchTuple(i));</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                        }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                        }<span class="keywordflow">else</span>{</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                                        }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                }       </div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="comment">//}</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">return</span> result_tids;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        </div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac66da4e2c203ff8ca673c19242a7e766">  200</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac66da4e2c203ff8ca673c19242a7e766">ColumnBaseTyped&lt;T&gt;::hash_join</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column_){</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keyword">typedef</span> boost::unordered_multimap&lt;T,TID,boost::hash&lt;T&gt;, std::equal_to&lt;T&gt; &gt; HashTable;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                <span class="keywordflow">if</span>(join_column_-&gt;type()!=<span class="keyword">typeid</span>(T)){</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                        std::cout &lt;&lt; <span class="stringliteral">&quot;Fatal Error!!! Typemismatch for columns &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a>  &lt;&lt; <span class="stringliteral">&quot; and &quot;</span> &lt;&lt; join_column_-&gt;getName() &lt;&lt; std::endl;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                        std::cout &lt;&lt; <span class="stringliteral">&quot;File: &quot;</span> &lt;&lt; __FILE__ &lt;&lt; <span class="stringliteral">&quot; Line: &quot;</span> &lt;&lt; __LINE__ &lt;&lt; std::endl;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                        exit(-1);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                }</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                </div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;T&gt; &gt; join_column = shared_pointer_namespace::static_pointer_cast&lt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped&lt;T&gt;</a> &gt;(join_column_); <span class="comment">//static_cast&lt;IntColumnPtr&gt;(column1);</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> join_tids( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#ad25a5198c5815e9eddddc65c1f156b2e">PositionListPair</a>());</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                                join_tids-&gt;first = <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>() );</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                join_tids-&gt;second = <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>() );</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="comment">//create hash table</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        HashTable hashtable;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++)        </div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                hashtable.insert(</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                                                std::pair&lt;T,TID&gt; ((*<span class="keyword">this</span>)[i],i)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                        );</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment">//probe larger relation</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;join_column-&gt;size();i++){</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                std::pair&lt;typename HashTable::iterator, typename HashTable::iterator&gt; range =  hashtable.equal_range((*join_column)[i]);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="keywordflow">for</span>(<span class="keyword">typename</span> HashTable::iterator it=range.first ; it!=range.second;it++){</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                        <span class="keywordflow">if</span>(it-&gt;first==(*join_column)[i]){</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                join_tids-&gt;first-&gt;push_back(it-&gt;second);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                                join_tids-&gt;second-&gt;push_back(i);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                <span class="comment">//cout &lt;&lt; &quot;match! &quot; &lt;&lt; it-&gt;second &lt;&lt; &quot;, &quot; &lt;&lt; i &lt;&lt; &quot;     &quot;  &lt;&lt; it-&gt;first &lt;&lt; endl;</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                        }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                }</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        }</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                <span class="keywordflow">return</span> join_tids;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a477d9ba1373752a95eabf0fa429b06d4">  240</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a477d9ba1373752a95eabf0fa429b06d4">ColumnBaseTyped&lt;Type&gt;::sort_merge_join</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column_){</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                <span class="keywordflow">if</span>(join_column_-&gt;type()!=<span class="keyword">typeid</span>(Type)){</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                                        std::cout &lt;&lt; <span class="stringliteral">&quot;Fatal Error!!! Typemismatch for columns &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a>  &lt;&lt; <span class="stringliteral">&quot; and &quot;</span> &lt;&lt; join_column_-&gt;getName() &lt;&lt; std::endl;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                                        std::cout &lt;&lt; <span class="stringliteral">&quot;File: &quot;</span> &lt;&lt; __FILE__ &lt;&lt; <span class="stringliteral">&quot; Line: &quot;</span> &lt;&lt; __LINE__ &lt;&lt; std::endl;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                                        exit(-1);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                                }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                </div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;Type&gt; &gt; join_column = shared_pointer_namespace::static_pointer_cast&lt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped&lt;Type&gt;</a> &gt;(join_column_); <span class="comment">//static_cast&lt;IntColumnPtr&gt;(column1);</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> join_tids( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#ad25a5198c5815e9eddddc65c1f156b2e">PositionListPair</a>());</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                join_tids-&gt;first = <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>() );</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                                join_tids-&gt;second = <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>() );</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                <span class="keywordflow">return</span> join_tids;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a10457ede9dda1c5cfc120fad77b36d04">  259</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a10457ede9dda1c5cfc120fad77b36d04">ColumnBaseTyped&lt;Type&gt;::nested_loop_join</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column_){</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                assert(join_column_!=NULL);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                                <span class="keywordflow">if</span>(join_column_-&gt;type()!=<span class="keyword">typeid</span>(Type)){</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                        std::cout &lt;&lt; <span class="stringliteral">&quot;Fatal Error!!! Typemismatch for columns &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a>  &lt;&lt; <span class="stringliteral">&quot; and &quot;</span> &lt;&lt; join_column_-&gt;getName() &lt;&lt; std::endl;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                                        std::cout &lt;&lt; <span class="stringliteral">&quot;File: &quot;</span> &lt;&lt; __FILE__ &lt;&lt; <span class="stringliteral">&quot; Line: &quot;</span> &lt;&lt; __LINE__ &lt;&lt; std::endl;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                                        exit(-1);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                                }</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                                </div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                                shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;Type&gt; &gt; join_column = shared_pointer_namespace::static_pointer_cast&lt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped&lt;Type&gt;</a> &gt;(join_column_); <span class="comment">//static_cast&lt;IntColumnPtr&gt;(column1);</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                                <a class="code" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> join_tids( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#ad25a5198c5815e9eddddc65c1f156b2e">PositionListPair</a>());</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                                join_tids-&gt;first = <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>() );</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                                join_tids-&gt;second = <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>( <span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>() );</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j=0;j&lt;join_column-&gt;size();j++){</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                                <span class="keywordflow">if</span>((*<span class="keyword">this</span>)[i]==(*join_column)[j]){</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                                        <span class="keywordflow">if</span>(<a class="code" href="namespaceCoGaDB.htm#a256e6fd79fe870ea16ee7fe0c8c3d7afa8df471a6865d1be51fd50109686043d9">debug</a>) std::cout &lt;&lt; <span class="stringliteral">&quot;MATCH: (&quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; j &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                        join_tids-&gt;first-&gt;push_back(i);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                                        join_tids-&gt;second-&gt;push_back(j);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                                }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                        }</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                }</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="keywordflow">return</span> join_tids;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a73a3921727fb8a5be6a81958b1a4e4d6">  287</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a73a3921727fb8a5be6a81958b1a4e4d6">ColumnBaseTyped&lt;T&gt;::operator==</a>(<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped&lt;T&gt;</a>&amp; column){</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;          <span class="keywordflow">if</span>(this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>()!=column.<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;          <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                        <span class="keywordflow">if</span>((*<span class="keyword">this</span>)[i]!=column[i]){      </div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                        }</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;          }</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;   }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#abe0449e21775f7b45c4bf78b92a10c7d">  298</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#abe0449e21775f7b45c4bf78b92a10c7d">ColumnBaseTyped&lt;Type&gt;::add</a>(<span class="keyword">const</span> boost::any&amp; new_value){</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                <span class="keywordflow">if</span>(new_value.empty()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                <span class="keywordflow">if</span>(<span class="keyword">typeid</span>(Type)==new_value.type()){</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                         Type value = boost::any_cast&lt;Type&gt;(new_value);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                         <span class="comment">//std::transform(myvec.begin(), myvec.end(), myvec.begin(),</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;          <span class="comment">//bind2nd(std::plus&lt;double&gt;(), 1.0));</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                         <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                        this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">operator[]</a>(i)+=value;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                         }</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                         <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        }</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        </div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                        </div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a86465e676bc50050e742502349a329b0">  315</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#abe0449e21775f7b45c4bf78b92a10c7d">ColumnBaseTyped&lt;Type&gt;::add</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> column){</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                <span class="comment">//std::transform ( first, first+5, second, results, std::plus&lt;int&gt;() );         </span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;Type&gt; &gt; typed_column = shared_pointer_namespace::static_pointer_cast&lt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped&lt;Type&gt;</a> &gt;(column);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                <span class="keywordflow">if</span>(!column) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                        this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">operator[]</a>(i)+=typed_column-&gt;operator[](i);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                }                       </div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        }</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a517e7c030036165fc07f38a871f09550">  328</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a517e7c030036165fc07f38a871f09550">ColumnBaseTyped&lt;Type&gt;::minus</a>(<span class="keyword">const</span> boost::any&amp; new_value){</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="comment">//shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;Type&gt; &gt; typed_column = shared_pointer_namespace::static_pointer_cast&lt;ColumnBaseTyped&lt;Type&gt; &gt;(column);    </span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                <span class="keywordflow">if</span>(new_value.empty()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                <span class="keywordflow">if</span>(<span class="keyword">typeid</span>(Type)==new_value.type()){</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                         Type value = boost::any_cast&lt;Type&gt;(new_value);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                         <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                                        this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">operator[]</a>(i)-=value;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                         }</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                         <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                }</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        }</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        </div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#aecf75e19247ccd3e34d0b8f70b00b2bb">  342</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a517e7c030036165fc07f38a871f09550">ColumnBaseTyped&lt;Type&gt;::minus</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> column){</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                <span class="comment">//std::transform ( first, first+5, second, results, std::plus&lt;int&gt;() );         </span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;Type&gt; &gt; typed_column = shared_pointer_namespace::static_pointer_cast&lt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped&lt;Type&gt;</a> &gt;(column);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                <span class="keywordflow">if</span>(!column) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                        this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">operator[]</a>(i)-=typed_column-&gt;operator[](i);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                }                       </div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        }       </div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a629b2349ed7289016f9ea1cf2d8e69ac">  354</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a629b2349ed7289016f9ea1cf2d8e69ac">ColumnBaseTyped&lt;Type&gt;::multiply</a>(<span class="keyword">const</span> boost::any&amp; new_value){</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                <span class="keywordflow">if</span>(new_value.empty()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                <span class="keywordflow">if</span>(<span class="keyword">typeid</span>(Type)==new_value.type()){</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                         Type value = boost::any_cast&lt;Type&gt;(new_value);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                         <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                                        this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">operator[]</a>(i)*=value;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                         }</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                         <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                }</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        }</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        </div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a49169a89bcb598b84dcd11eac21c2055">  367</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a629b2349ed7289016f9ea1cf2d8e69ac">ColumnBaseTyped&lt;Type&gt;::multiply</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> column){</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                <span class="comment">//std::transform ( first, first+5, second, results, std::plus&lt;int&gt;() );         </span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;Type&gt; &gt; typed_column = shared_pointer_namespace::static_pointer_cast&lt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped&lt;Type&gt;</a> &gt;(column);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                <span class="keywordflow">if</span>(!column) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                        this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">operator[]</a>(i)*=typed_column-&gt;operator[](i);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                }                       </div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        }</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a7c603f30ff974d76878a2d24fc863df6">  380</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a7c603f30ff974d76878a2d24fc863df6">ColumnBaseTyped&lt;Type&gt;::division</a>(<span class="keyword">const</span> boost::any&amp; new_value){</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                <span class="keywordflow">if</span>(new_value.empty()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                <span class="keywordflow">if</span>(<span class="keyword">typeid</span>(Type)==new_value.type()){</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                         Type value = boost::any_cast&lt;Type&gt;(new_value);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                         <span class="comment">//check that we do not devide by zero</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                         <span class="keywordflow">if</span>(value==0) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                         <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                        this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">operator[]</a>(i)/=value;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                         }</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                         <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        }</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        </div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#aa792f1534eb72663cdad309f183902df">  395</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a7c603f30ff974d76878a2d24fc863df6">ColumnBaseTyped&lt;Type&gt;::division</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> column){</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                <span class="comment">//std::transform ( first, first+5, second, results, std::plus&lt;int&gt;() );         </span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;Type&gt; &gt; typed_column = shared_pointer_namespace::static_pointer_cast&lt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped&lt;Type&gt;</a> &gt;(column);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                <span class="keywordflow">if</span>(!column) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">size</a>();i++){</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                        this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">operator[]</a>(i)/=typed_column-&gt;operator[](i);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                }                       </div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        }</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="comment">//total tempalte specializations, because numeric computations are undefined on strings </span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00407"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a23c7594a257774ef9ddfbe99abd036a5">  407</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#abe0449e21775f7b45c4bf78b92a10c7d">ColumnBaseTyped&lt;std::string&gt;::add</a>(<span class="keyword">const</span> boost::any&amp;){ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00409"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a84c1639c77eadf006e7807784d9dff29">  409</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#abe0449e21775f7b45c4bf78b92a10c7d">ColumnBaseTyped&lt;std::string&gt;::add</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>){ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00412"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a05bb997933c470e4d7ff2c337c727356">  412</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a517e7c030036165fc07f38a871f09550">ColumnBaseTyped&lt;std::string&gt;::minus</a>(<span class="keyword">const</span> boost::any&amp;){ <span class="keywordflow">return</span> <span class="keyword">false</span>;       }</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00414"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#adc71977798f104163115514a5c4fe9a8">  414</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a517e7c030036165fc07f38a871f09550">ColumnBaseTyped&lt;std::string&gt;::minus</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>){ <span class="keywordflow">return</span> <span class="keyword">false</span>;       }</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a62130417f392031ea0e277a6ae291eb4">  418</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a629b2349ed7289016f9ea1cf2d8e69ac">ColumnBaseTyped&lt;std::string&gt;::multiply</a>(<span class="keyword">const</span> boost::any&amp;){ <span class="keywordflow">return</span> <span class="keyword">false</span>;    }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0c68502575a0f9b3eb47ceb12c415997">  420</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a629b2349ed7289016f9ea1cf2d8e69ac">ColumnBaseTyped&lt;std::string&gt;::multiply</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>){ <span class="keywordflow">return</span> <span class="keyword">false</span>;    }</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        </div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00423"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a1eb7c89cfe4e8f8999380db3a86e14fa">  423</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a7c603f30ff974d76878a2d24fc863df6">ColumnBaseTyped&lt;std::string&gt;::division</a>(<span class="keyword">const</span> boost::any&amp;){ <span class="keywordflow">return</span> <span class="keyword">false</span>;    }</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        <span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1ColumnBaseTyped.htm#a2cdd3d1b385fc47df49d25c216b3d82f">  425</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm#a7c603f30ff974d76878a2d24fc863df6">ColumnBaseTyped&lt;std::string&gt;::division</a>(<a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>){ <span class="keywordflow">return</span> <span class="keyword">false</span>;    }</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;}; <span class="comment">//end namespace CogaDB</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="ttc" id="namespaceCoGaDB_htm_aeea69c893912bd4994fd616b189db4d4a75a994dfca60310f3806fea61ecfd007"><div class="ttname"><a href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4a75a994dfca60310f3806fea61ecfd007">CoGaDB::LESSER</a></div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00022">global_definitions.hpp:22</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a33ccb4afa788aed82f287658a7b76d2b"><div class="ttname"><a href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">CoGaDB::PositionListPairPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; PositionListPair &gt; PositionListPairPtr</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00023">base_column.hpp:23</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ae7e30b13ad239f7010ad333125321e9a"><div class="ttname"><a href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">CoGaDB::PositionListPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; PositionList &gt; PositionListPtr</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00018">base_column.hpp:18</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_aab999a6f505e6b715290766557b25552"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#aab999a6f505e6b715290766557b25552">CoGaDB::ColumnBaseTyped::~ColumnBaseTyped</a></div><div class="ttdeci">virtual ~ColumnBaseTyped()</div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00104">column_base_typed.hpp:104</a></div></div>
<div class="ttc" id="base__column_8hpp_htm"><div class="ttname"><a href="base__column_8hpp.htm">base_column.hpp</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_ae8d2ac257af16e7d8bc78e1ea43cb14d"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">CoGaDB::ColumnBase::ColumnPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; ColumnBase &gt; ColumnPtr</div><div class="ttdoc">defines a smart pointer to a ColumnBase Object </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00041">base_column.hpp:41</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a256e6fd79fe870ea16ee7fe0c8c3d7afa8df471a6865d1be51fd50109686043d9"><div class="ttname"><a href="namespaceCoGaDB.htm#a256e6fd79fe870ea16ee7fe0c8c3d7afa8df471a6865d1be51fd50109686043d9">CoGaDB::debug</a></div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00038">global_definitions.hpp:38</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_aeea69c893912bd4994fd616b189db4d4a0df6227c010292cc19f175c19bc8683a"><div class="ttname"><a href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4a0df6227c010292cc19f175c19bc8683a">CoGaDB::GREATER</a></div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00022">global_definitions.hpp:22</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a517e7c030036165fc07f38a871f09550"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a517e7c030036165fc07f38a871f09550">CoGaDB::ColumnBaseTyped::minus</a></div><div class="ttdeci">virtual bool minus(const boost::any &amp;new_Value)</div><div class="ttdoc">substracts constant from column </div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00328">column_base_typed.hpp:328</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ad25a5198c5815e9eddddc65c1f156b2e"><div class="ttname"><a href="namespaceCoGaDB.htm#ad25a5198c5815e9eddddc65c1f156b2e">CoGaDB::PositionListPair</a></div><div class="ttdeci">std::pair&lt; PositionListPtr, PositionListPtr &gt; PositionListPair</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00021">base_column.hpp:21</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a298584fc2f5bdaea233194ab6b6b0834"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a298584fc2f5bdaea233194ab6b6b0834">CoGaDB::ColumnBaseTyped::insert</a></div><div class="ttdeci">virtual bool insert(const boost::any &amp;new_Value)=0</div><div class="ttdoc">appends a value new_Value to end of column </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a10457ede9dda1c5cfc120fad77b36d04"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a10457ede9dda1c5cfc120fad77b36d04">CoGaDB::ColumnBaseTyped::nested_loop_join</a></div><div class="ttdeci">virtual const PositionListPairPtr nested_loop_join(ColumnPtr join_column)</div><div class="ttdoc">joins two columns using the nested loop join algorithm </div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00259">column_base_typed.hpp:259</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a15ad2a4372a39ea9a450897534db24d2"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a15ad2a4372a39ea9a450897534db24d2">CoGaDB::ColumnBaseTyped::type</a></div><div class="ttdeci">virtual const std::type_info &amp; type() const </div><div class="ttdoc">returns type information of internal values </div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00109">column_base_typed.hpp:109</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a0f43450e8224027b9d1055ba8d758477"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">CoGaDB::ColumnBaseTyped::operator[]</a></div><div class="ttdeci">virtual T &amp; operator[](const int index)=0</div><div class="ttdoc">defines operator[] for this class, which enables the user to thread all typed columns as arrays...</div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ac53a708d27568a6584e7c03b4ab659e5"><div class="ttname"><a href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">CoGaDB::AttributeType</a></div><div class="ttdeci">AttributeType</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00016">global_definitions.hpp:16</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a7c603f30ff974d76878a2d24fc863df6"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a7c603f30ff974d76878a2d24fc863df6">CoGaDB::ColumnBaseTyped::division</a></div><div class="ttdeci">virtual bool division(const boost::any &amp;new_Value)</div><div class="ttdoc">devide values in column by a constant </div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00380">column_base_typed.hpp:380</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a88a1615b9b32ea4afdde6b06985dffaf"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a88a1615b9b32ea4afdde6b06985dffaf">CoGaDB::ColumnBaseTyped::ColumnBaseTyped</a></div><div class="ttdeci">ColumnBaseTyped(const std::string &amp;name, AttributeType db_type)</div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00099">column_base_typed.hpp:99</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a5ddfa2dbe32f62d7a12bd0edf5f6ccd2"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a5ddfa2dbe32f62d7a12bd0edf5f6ccd2">CoGaDB::ColumnBaseTyped::load</a></div><div class="ttdeci">virtual bool load(const std::string &amp;path)=0</div><div class="ttdoc">load column from disc </div></div>
<div class="ttc" id="namespaceCoGaDB_htm"><div class="ttname"><a href="namespaceCoGaDB.htm">CoGaDB</a></div><div class="ttdoc">The global namespace of the programming tasks, to avoid name claches with other libraries. </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8cpp_source.htm#l00008">base_column.cpp:8</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a629b2349ed7289016f9ea1cf2d8e69ac"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a629b2349ed7289016f9ea1cf2d8e69ac">CoGaDB::ColumnBaseTyped::multiply</a></div><div class="ttdeci">virtual bool multiply(const boost::any &amp;new_Value)</div><div class="ttdoc">multiply constant with column </div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00354">column_base_typed.hpp:354</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_ac2c0472e88ed4c14d10a879a6646c3f2"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#ac2c0472e88ed4c14d10a879a6646c3f2">CoGaDB::ColumnBaseTyped::sort</a></div><div class="ttdeci">virtual const PositionListPtr sort(SortOrder order)</div><div class="ttdoc">sorts a column w.r.t. a SortOrder </div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00114">column_base_typed.hpp:114</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a256e6fd79fe870ea16ee7fe0c8c3d7afa3c0eed2506e9aefb8851072a6a37a533"><div class="ttname"><a href="namespaceCoGaDB.htm#a256e6fd79fe870ea16ee7fe0c8c3d7afa3c0eed2506e9aefb8851072a6a37a533">CoGaDB::quiet</a></div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00036">global_definitions.hpp:36</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a91c27b988eb79cca9163a82492936814"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a91c27b988eb79cca9163a82492936814">CoGaDB::ColumnBaseTyped::selection</a></div><div class="ttdeci">virtual const PositionListPtr selection(const boost::any &amp;value_for_comparison, const ValueComparator comp)</div><div class="ttdoc">filters the values of a column according to a filter condition consisting of a comparison value and a...</div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00154">column_base_typed.hpp:154</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_aeea69c893912bd4994fd616b189db4d4acd922965ccf5d670a7096870ad06a883"><div class="ttname"><a href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4acd922965ccf5d670a7096870ad06a883">CoGaDB::EQUAL</a></div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00022">global_definitions.hpp:22</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a3903511755e2c745226394b999ddb8a8"><div class="ttname"><a href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">CoGaDB::PositionList</a></div><div class="ttdeci">std::vector&lt; TID &gt; PositionList</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00016">base_column.hpp:16</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_aeeb1eb6d5b3c4c421aa79bb5584da856"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#aeeb1eb6d5b3c4c421aa79bb5584da856">CoGaDB::ColumnBaseTyped::isMaterialized</a></div><div class="ttdeci">virtual bool isMaterialized() const =0</div><div class="ttdoc">use this method to determine whether the column is materialized or a Lookup Column ...</div></div>
<div class="ttc" id="namespaceCoGaDB_htm_aeea69c893912bd4994fd616b189db4d4"><div class="ttname"><a href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">CoGaDB::ValueComparator</a></div><div class="ttdeci">ValueComparator</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00022">global_definitions.hpp:22</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a8ff087045b933adcd017877c1f0802bc"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">CoGaDB::ColumnBaseTyped::size</a></div><div class="ttdeci">virtual size_t size() const =0</div><div class="ttdoc">returns the number of values (rows) in a column </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a87401571c18eb717e2135969e67a0cf2"><div class="ttname"><a href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">CoGaDB::TID</a></div><div class="ttdeci">unsigned int TID</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00046">global_definitions.hpp:46</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_ae990bc63aca6d10e6c25fc55f0d8de15"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#ae990bc63aca6d10e6c25fc55f0d8de15">CoGaDB::ColumnBaseTyped::getSizeinBytes</a></div><div class="ttdeci">virtual unsigned int getSizeinBytes() const =0</div><div class="ttdoc">returns the size in bytes the column consumes in main memory </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm">CoGaDB::ColumnBaseTyped</a></div><div class="ttdoc">This class represents a column with type T, is the base class for all typed column classes and allows...</div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00033">column_base_typed.hpp:33</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a11b4618c929dcc789191bc6c2aa48068"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a11b4618c929dcc789191bc6c2aa48068">CoGaDB::ColumnBaseTyped::parallel_selection</a></div><div class="ttdeci">virtual const PositionListPtr parallel_selection(const boost::any &amp;value_for_comparison, const ValueComparator comp, unsigned int number_of_threads)</div><div class="ttdoc">filters the values of a column in parallel according to a filter condition consisting of a comparison...</div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00144">column_base_typed.hpp:144</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_acb4e29d5b1fb0bb8c1f3ec968311ebba"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#acb4e29d5b1fb0bb8c1f3ec968311ebba">CoGaDB::ColumnBaseTyped::isCompressed</a></div><div class="ttdeci">virtual bool isCompressed() const =0</div><div class="ttdoc">use this method to determine whether the column is materialized or a Lookup Column ...</div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_ac87ff73aa6d72bbf3b5ae510327e22c6"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#ac87ff73aa6d72bbf3b5ae510327e22c6">CoGaDB::ColumnBaseTyped::print</a></div><div class="ttdeci">virtual void print() const =0</div><div class="ttdoc">prints the content of a column </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a477d9ba1373752a95eabf0fa429b06d4"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a477d9ba1373752a95eabf0fa429b06d4">CoGaDB::ColumnBaseTyped::sort_merge_join</a></div><div class="ttdeci">virtual const PositionListPairPtr sort_merge_join(ColumnPtr join_column)</div><div class="ttdoc">joins two columns using the sort merge join algorithm </div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00240">column_base_typed.hpp:240</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_aef36a1764886ea25e05ba098571fa711"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#aef36a1764886ea25e05ba098571fa711">CoGaDB::ColumnBaseTyped::clearContent</a></div><div class="ttdeci">virtual bool clearContent()=0</div><div class="ttdoc">deletes all values stored in the column </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a811d44896f4edb003b9bad6e619a24c9"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a811d44896f4edb003b9bad6e619a24c9">CoGaDB::ColumnBaseTyped::copy</a></div><div class="ttdeci">virtual const ColumnPtr copy() const =0</div><div class="ttdoc">virtual copy constructor </div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a4da9b0c7d2a04facb7e4834b8cb86aa5aac7a3b8f2752e8a54ea32049c0d8de36"><div class="ttname"><a href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5aac7a3b8f2752e8a54ea32049c0d8de36">CoGaDB::ASCENDING</a></div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00024">global_definitions.hpp:24</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm">CoGaDB::ColumnBase</a></div><div class="ttdoc">This class represents a generic column, is the base class for all column classes and allows a uniform...</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00038">base_column.hpp:38</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_adde5ec5902be1d18cc625cc41526e241"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">CoGaDB::ColumnBase::name_</a></div><div class="ttdeci">std::string name_</div><div class="ttdoc">attribute name of the column </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00148">base_column.hpp:148</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a4da9b0c7d2a04facb7e4834b8cb86aa5"><div class="ttname"><a href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5">CoGaDB::SortOrder</a></div><div class="ttdeci">SortOrder</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00024">global_definitions.hpp:24</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_ac66da4e2c203ff8ca673c19242a7e766"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#ac66da4e2c203ff8ca673c19242a7e766">CoGaDB::ColumnBaseTyped::hash_join</a></div><div class="ttdeci">virtual const PositionListPairPtr hash_join(ColumnPtr join_column)</div><div class="ttdoc">joins two columns using the hash join algorithm </div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00200">column_base_typed.hpp:200</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a73a3921727fb8a5be6a81958b1a4e4d6"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a73a3921727fb8a5be6a81958b1a4e4d6">CoGaDB::ColumnBaseTyped::operator==</a></div><div class="ttdeci">bool operator==(ColumnBaseTyped&lt; T &gt; &amp;column)</div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00287">column_base_typed.hpp:287</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_ac8b41ece275215ee6ca82d57294f1bb9"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#ac8b41ece275215ee6ca82d57294f1bb9">CoGaDB::ColumnBaseTyped::update</a></div><div class="ttdeci">virtual bool update(TID tid, const boost::any &amp;new_value)=0</div><div class="ttdoc">updates the value on position tid with a value new_Value </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_a8b170edcae21575ea41c55df2c63e823"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#a8b170edcae21575ea41c55df2c63e823">CoGaDB::ColumnBaseTyped::store</a></div><div class="ttdeci">virtual bool store(const std::string &amp;path)=0</div><div class="ttdoc">store a column on the disc </div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm_abe0449e21775f7b45c4bf78b92a10c7d"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm#abe0449e21775f7b45c4bf78b92a10c7d">CoGaDB::ColumnBaseTyped::add</a></div><div class="ttdeci">virtual bool add(const boost::any &amp;new_Value)</div><div class="ttdoc">adds constant to column </div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00298">column_base_typed.hpp:298</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a4da9b0c7d2a04facb7e4834b8cb86aa5a15fe94b9b15cdeb0473d054f8ae21fbd"><div class="ttname"><a href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5a15fe94b9b15cdeb0473d054f8ae21fbd">CoGaDB::DESCENDING</a></div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00024">global_definitions.hpp:24</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Apr 1 2017 14:11:30 for Database Implementation Techniques Programming Task SoSe2016 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
