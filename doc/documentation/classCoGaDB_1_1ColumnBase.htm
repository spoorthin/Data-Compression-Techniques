<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Database Implementation Techniques Programming Task SoSe2016: CoGaDB::ColumnBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Database Implementation Techniques Programming Task SoSe2016
   </div>
   <div id="projectbrief">DB2 Programming Task SoSe2016</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceCoGaDB.htm">CoGaDB</a></li><li class="navelem"><a class="el" href="classCoGaDB_1_1ColumnBase.htm">ColumnBase</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classCoGaDB_1_1ColumnBase-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">CoGaDB::ColumnBase Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This class represents a generic column, is the base class for all column classes and allows a uniform handling of columns.  
 <a href="classCoGaDB_1_1ColumnBase.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="base__column_8hpp_source.htm">base_column.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for CoGaDB::ColumnBase:</div>
<div class="dyncontent">
<div class="center"><img src="classCoGaDB_1_1ColumnBase__inherit__graph.png" border="0" usemap="#CoGaDB_1_1ColumnBase_inherit__map" alt="Inheritance graph"/></div>
<map name="CoGaDB_1_1ColumnBase_inherit__map" id="CoGaDB_1_1ColumnBase_inherit__map">
</map>
<center><span class="legend">[<a href="graph_legend.htm">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for CoGaDB::ColumnBase:</div>
<div class="dyncontent">
<div class="center"><img src="classCoGaDB_1_1ColumnBase__coll__graph.png" border="0" usemap="#CoGaDB_1_1ColumnBase_coll__map" alt="Collaboration graph"/></div>
<map name="CoGaDB_1_1ColumnBase_coll__map" id="CoGaDB_1_1ColumnBase_coll__map">
</map>
<center><span class="legend">[<a href="graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ae8d2ac257af16e7d8bc78e1ea43cb14d"><td class="memItemLeft" align="right" valign="top">typedef shared_pointer_namespace::shared_ptr&lt; <a class="el" href="classCoGaDB_1_1ColumnBase.htm">ColumnBase</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a></td></tr>
<tr class="memdesc:ae8d2ac257af16e7d8bc78e1ea43cb14d"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines a smart pointer to a <a class="el" href="classCoGaDB_1_1ColumnBase.htm" title="This class represents a generic column, is the base class for all column classes and allows a uniform...">ColumnBase</a> Object  <a href="#ae8d2ac257af16e7d8bc78e1ea43cb14d">More...</a><br /></td></tr>
<tr class="separator:ae8d2ac257af16e7d8bc78e1ea43cb14d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7952cc631416caa4c03523daeb66954e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a7952cc631416caa4c03523daeb66954e">ColumnBase</a> (const std::string &amp;name, <a class="el" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type)</td></tr>
<tr class="separator:a7952cc631416caa4c03523daeb66954e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a496bb224058ea81d70617fa851308306"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a496bb224058ea81d70617fa851308306">~ColumnBase</a> ()</td></tr>
<tr class="separator:a496bb224058ea81d70617fa851308306"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbb7a3275d4e1c5634b5af969f82cfae"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#adbb7a3275d4e1c5634b5af969f82cfae">insert</a> (const boost::any &amp;new_Value)=0</td></tr>
<tr class="memdesc:adbb7a3275d4e1c5634b5af969f82cfae"><td class="mdescLeft">&#160;</td><td class="mdescRight">appends a value new_Value to end of column  <a href="#adbb7a3275d4e1c5634b5af969f82cfae">More...</a><br /></td></tr>
<tr class="separator:adbb7a3275d4e1c5634b5af969f82cfae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a791400c0d1a3b91ef3fa8ca3f37956b9"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a791400c0d1a3b91ef3fa8ca3f37956b9">update</a> (<a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid, const boost::any &amp;new_Value)=0</td></tr>
<tr class="memdesc:a791400c0d1a3b91ef3fa8ca3f37956b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">updates the value on position tid with a value new_Value  <a href="#a791400c0d1a3b91ef3fa8ca3f37956b9">More...</a><br /></td></tr>
<tr class="separator:a791400c0d1a3b91ef3fa8ca3f37956b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a414586ff23e1a6728d8af9556cc6ad74"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a414586ff23e1a6728d8af9556cc6ad74">update</a> (<a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tids, const boost::any &amp;new_value)=0</td></tr>
<tr class="memdesc:a414586ff23e1a6728d8af9556cc6ad74"><td class="mdescLeft">&#160;</td><td class="mdescRight">updates the values specified by the position list with a value new_Value  <a href="#a414586ff23e1a6728d8af9556cc6ad74">More...</a><br /></td></tr>
<tr class="separator:a414586ff23e1a6728d8af9556cc6ad74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0c448970e05e30f9f79e1d943a9a006"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#aa0c448970e05e30f9f79e1d943a9a006">remove</a> (<a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)=0</td></tr>
<tr class="memdesc:aa0c448970e05e30f9f79e1d943a9a006"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes the value on position tid  <a href="#aa0c448970e05e30f9f79e1d943a9a006">More...</a><br /></td></tr>
<tr class="separator:aa0c448970e05e30f9f79e1d943a9a006"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e7386bf2883efb6def0a31f26a4170b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a8e7386bf2883efb6def0a31f26a4170b">remove</a> (<a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid)=0</td></tr>
<tr class="memdesc:a8e7386bf2883efb6def0a31f26a4170b"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes the values defined in the position list  <a href="#a8e7386bf2883efb6def0a31f26a4170b">More...</a><br /></td></tr>
<tr class="separator:a8e7386bf2883efb6def0a31f26a4170b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa5a675946ca7ec7b44b843a76927745"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#aaa5a675946ca7ec7b44b843a76927745">clearContent</a> ()=0</td></tr>
<tr class="memdesc:aaa5a675946ca7ec7b44b843a76927745"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes all values stored in the column  <a href="#aaa5a675946ca7ec7b44b843a76927745">More...</a><br /></td></tr>
<tr class="separator:aaa5a675946ca7ec7b44b843a76927745"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6612812357258a4c3cc57134c8d717e3"><td class="memItemLeft" align="right" valign="top">virtual const boost::any&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a6612812357258a4c3cc57134c8d717e3">get</a> (<a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)=0</td></tr>
<tr class="memdesc:a6612812357258a4c3cc57134c8d717e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">generic function for fetching a value form a column (slow)  <a href="#a6612812357258a4c3cc57134c8d717e3">More...</a><br /></td></tr>
<tr class="separator:a6612812357258a4c3cc57134c8d717e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4bb2af029ab94ba3689cfd1864e4e6c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ac4bb2af029ab94ba3689cfd1864e4e6c">print</a> () const =0  throw ()</td></tr>
<tr class="memdesc:ac4bb2af029ab94ba3689cfd1864e4e6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">prints the content of a column  <a href="#ac4bb2af029ab94ba3689cfd1864e4e6c">More...</a><br /></td></tr>
<tr class="separator:ac4bb2af029ab94ba3689cfd1864e4e6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0101453631de8ff59ffc24eed760d81d"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a0101453631de8ff59ffc24eed760d81d">size</a> () const =0  throw ()</td></tr>
<tr class="memdesc:a0101453631de8ff59ffc24eed760d81d"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of values (rows) in a column  <a href="#a0101453631de8ff59ffc24eed760d81d">More...</a><br /></td></tr>
<tr class="separator:a0101453631de8ff59ffc24eed760d81d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f43b8bc8bb5956df6e2b5256193bc3"><td class="memItemLeft" align="right" valign="top">virtual unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ab7f43b8bc8bb5956df6e2b5256193bc3">getSizeinBytes</a> () const =0  throw ()</td></tr>
<tr class="memdesc:ab7f43b8bc8bb5956df6e2b5256193bc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the size in bytes the column consumes in main memory  <a href="#ab7f43b8bc8bb5956df6e2b5256193bc3">More...</a><br /></td></tr>
<tr class="separator:ab7f43b8bc8bb5956df6e2b5256193bc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44ce38ba1b6f9d0f23f780ca42123284"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a44ce38ba1b6f9d0f23f780ca42123284">copy</a> () const =0</td></tr>
<tr class="memdesc:a44ce38ba1b6f9d0f23f780ca42123284"><td class="mdescLeft">&#160;</td><td class="mdescRight">virtual copy constructor  <a href="#a44ce38ba1b6f9d0f23f780ca42123284">More...</a><br /></td></tr>
<tr class="separator:a44ce38ba1b6f9d0f23f780ca42123284"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab03331430756cc4080800cf4eb1cf4ae"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ab03331430756cc4080800cf4eb1cf4ae">sort</a> (<a class="el" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5">SortOrder</a> order=<a class="el" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5aac7a3b8f2752e8a54ea32049c0d8de36">ASCENDING</a>)=0</td></tr>
<tr class="memdesc:ab03331430756cc4080800cf4eb1cf4ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">sorts a column w.r.t. a SortOrder  <a href="#ab03331430756cc4080800cf4eb1cf4ae">More...</a><br /></td></tr>
<tr class="separator:ab03331430756cc4080800cf4eb1cf4ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a943315677651ad20b91400a40cca2e08"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a943315677651ad20b91400a40cca2e08">selection</a> (const boost::any &amp;value_for_comparison, const <a class="el" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a> comp)=0</td></tr>
<tr class="memdesc:a943315677651ad20b91400a40cca2e08"><td class="mdescLeft">&#160;</td><td class="mdescRight">filters the values of a column according to a filter condition consisting of a comparison value and a ValueComparator (=,&lt;,&gt;)  <a href="#a943315677651ad20b91400a40cca2e08">More...</a><br /></td></tr>
<tr class="separator:a943315677651ad20b91400a40cca2e08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3368c3e420a2d0456183007b1edde238"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a3368c3e420a2d0456183007b1edde238">parallel_selection</a> (const boost::any &amp;value_for_comparison, const <a class="el" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a> comp, unsigned int number_of_threads)=0</td></tr>
<tr class="memdesc:a3368c3e420a2d0456183007b1edde238"><td class="mdescLeft">&#160;</td><td class="mdescRight">filters the values of a column in parallel according to a filter condition consisting of a comparison value and a ValueComparator (=,&lt;,&gt;)  <a href="#a3368c3e420a2d0456183007b1edde238">More...</a><br /></td></tr>
<tr class="separator:a3368c3e420a2d0456183007b1edde238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ef9d91dace96d0ce47ed9cdab552d0"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a71ef9d91dace96d0ce47ed9cdab552d0">hash_join</a> (<a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column)=0</td></tr>
<tr class="memdesc:a71ef9d91dace96d0ce47ed9cdab552d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">joins two columns using the hash join algorithm  <a href="#a71ef9d91dace96d0ce47ed9cdab552d0">More...</a><br /></td></tr>
<tr class="separator:a71ef9d91dace96d0ce47ed9cdab552d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b1b5878495d33efe00e163e9f64b449"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a8b1b5878495d33efe00e163e9f64b449">sort_merge_join</a> (<a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column)=0</td></tr>
<tr class="memdesc:a8b1b5878495d33efe00e163e9f64b449"><td class="mdescLeft">&#160;</td><td class="mdescRight">joins two columns using the sort merge join algorithm  <a href="#a8b1b5878495d33efe00e163e9f64b449">More...</a><br /></td></tr>
<tr class="separator:a8b1b5878495d33efe00e163e9f64b449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acde1f36d5fe42e09ae4561eebee1b438"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#acde1f36d5fe42e09ae4561eebee1b438">nested_loop_join</a> (<a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> join_column)=0</td></tr>
<tr class="memdesc:acde1f36d5fe42e09ae4561eebee1b438"><td class="mdescLeft">&#160;</td><td class="mdescRight">joins two columns using the nested loop join algorithm  <a href="#acde1f36d5fe42e09ae4561eebee1b438">More...</a><br /></td></tr>
<tr class="separator:acde1f36d5fe42e09ae4561eebee1b438"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a320ad0009caf49680ecaf4c062fba500"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a320ad0009caf49680ecaf4c062fba500">add</a> (const boost::any &amp;new_Value)=0</td></tr>
<tr class="memdesc:a320ad0009caf49680ecaf4c062fba500"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds constant to column  <a href="#a320ad0009caf49680ecaf4c062fba500">More...</a><br /></td></tr>
<tr class="separator:a320ad0009caf49680ecaf4c062fba500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa1d5b89b522eabcae6dcecfd84a308b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#afa1d5b89b522eabcae6dcecfd84a308b">add</a> (<a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> column)=0</td></tr>
<tr class="memdesc:afa1d5b89b522eabcae6dcecfd84a308b"><td class="mdescLeft">&#160;</td><td class="mdescRight">vector addition of two columns  <a href="#afa1d5b89b522eabcae6dcecfd84a308b">More...</a><br /></td></tr>
<tr class="separator:afa1d5b89b522eabcae6dcecfd84a308b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add9deb21f77a3e6d0a785018f7c5ad8c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#add9deb21f77a3e6d0a785018f7c5ad8c">minus</a> (const boost::any &amp;new_Value)=0</td></tr>
<tr class="memdesc:add9deb21f77a3e6d0a785018f7c5ad8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">substracts constant from column  <a href="#add9deb21f77a3e6d0a785018f7c5ad8c">More...</a><br /></td></tr>
<tr class="separator:add9deb21f77a3e6d0a785018f7c5ad8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a382990cf75e1987fdaf529e83edc1fe2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a382990cf75e1987fdaf529e83edc1fe2">minus</a> (<a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> column)=0</td></tr>
<tr class="memdesc:a382990cf75e1987fdaf529e83edc1fe2"><td class="mdescLeft">&#160;</td><td class="mdescRight">vector substraction of two columns  <a href="#a382990cf75e1987fdaf529e83edc1fe2">More...</a><br /></td></tr>
<tr class="separator:a382990cf75e1987fdaf529e83edc1fe2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08c2ef362738b6ce3f4eba429911b7e2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a08c2ef362738b6ce3f4eba429911b7e2">multiply</a> (const boost::any &amp;new_Value)=0</td></tr>
<tr class="memdesc:a08c2ef362738b6ce3f4eba429911b7e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">multiply constant with column  <a href="#a08c2ef362738b6ce3f4eba429911b7e2">More...</a><br /></td></tr>
<tr class="separator:a08c2ef362738b6ce3f4eba429911b7e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3df406a150d90c7c93e997a0a97f7b8d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a3df406a150d90c7c93e997a0a97f7b8d">multiply</a> (<a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> column)=0</td></tr>
<tr class="memdesc:a3df406a150d90c7c93e997a0a97f7b8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">multiply two columns A and B  <a href="#a3df406a150d90c7c93e997a0a97f7b8d">More...</a><br /></td></tr>
<tr class="separator:a3df406a150d90c7c93e997a0a97f7b8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb6c8321b6451c2bef58936e623b328c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#acb6c8321b6451c2bef58936e623b328c">division</a> (const boost::any &amp;new_Value)=0</td></tr>
<tr class="memdesc:acb6c8321b6451c2bef58936e623b328c"><td class="mdescLeft">&#160;</td><td class="mdescRight">devide values in column by a constant  <a href="#acb6c8321b6451c2bef58936e623b328c">More...</a><br /></td></tr>
<tr class="separator:acb6c8321b6451c2bef58936e623b328c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f0a22c214d54f410bb8a498a317a829"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a8f0a22c214d54f410bb8a498a317a829">division</a> (<a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> column)=0</td></tr>
<tr class="memdesc:a8f0a22c214d54f410bb8a498a317a829"><td class="mdescLeft">&#160;</td><td class="mdescRight">devide column A with column B  <a href="#a8f0a22c214d54f410bb8a498a317a829">More...</a><br /></td></tr>
<tr class="separator:a8f0a22c214d54f410bb8a498a317a829"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c4176f8f8d93e7694e0a52284bd98cf"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a6c4176f8f8d93e7694e0a52284bd98cf">store</a> (const std::string &amp;path)=0</td></tr>
<tr class="memdesc:a6c4176f8f8d93e7694e0a52284bd98cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">store a column on the disc  <a href="#a6c4176f8f8d93e7694e0a52284bd98cf">More...</a><br /></td></tr>
<tr class="separator:a6c4176f8f8d93e7694e0a52284bd98cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84c32d3ed8b6570e3c9d190a85dfdfbd"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a84c32d3ed8b6570e3c9d190a85dfdfbd">load</a> (const std::string &amp;path)=0</td></tr>
<tr class="memdesc:a84c32d3ed8b6570e3c9d190a85dfdfbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">load column from disc  <a href="#a84c32d3ed8b6570e3c9d190a85dfdfbd">More...</a><br /></td></tr>
<tr class="separator:a84c32d3ed8b6570e3c9d190a85dfdfbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15a93d403eea75c1050d73b708c7c7cd"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a15a93d403eea75c1050d73b708c7c7cd">isMaterialized</a> () const =0  throw ()</td></tr>
<tr class="memdesc:a15a93d403eea75c1050d73b708c7c7cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">use this method to determine whether the column is materialized or a Lookup <a class="el" href="classCoGaDB_1_1Column.htm">Column</a>  <a href="#a15a93d403eea75c1050d73b708c7c7cd">More...</a><br /></td></tr>
<tr class="separator:a15a93d403eea75c1050d73b708c7c7cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a007460a4371ac5a9d21de9584e117e88"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a007460a4371ac5a9d21de9584e117e88">isCompressed</a> () const =0  throw ()</td></tr>
<tr class="memdesc:a007460a4371ac5a9d21de9584e117e88"><td class="mdescLeft">&#160;</td><td class="mdescRight">use this method to determine whether the column is materialized or a Lookup <a class="el" href="classCoGaDB_1_1Column.htm">Column</a>  <a href="#a007460a4371ac5a9d21de9584e117e88">More...</a><br /></td></tr>
<tr class="separator:a007460a4371ac5a9d21de9584e117e88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a025b63767aae6e1ab2c772689a4a0033"><td class="memItemLeft" align="right" valign="top">virtual const std::type_info &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a025b63767aae6e1ab2c772689a4a0033">type</a> () const =0  throw ()</td></tr>
<tr class="memdesc:a025b63767aae6e1ab2c772689a4a0033"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns type information of internal values  <a href="#a025b63767aae6e1ab2c772689a4a0033">More...</a><br /></td></tr>
<tr class="separator:a025b63767aae6e1ab2c772689a4a0033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb0aa5bd957c60e6162e37ea81506b12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#abb0aa5bd957c60e6162e37ea81506b12">getType</a> () const   throw ()</td></tr>
<tr class="memdesc:abb0aa5bd957c60e6162e37ea81506b12"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns database type of column (as defined in "SQL" statement)  <a href="#abb0aa5bd957c60e6162e37ea81506b12">More...</a><br /></td></tr>
<tr class="separator:abb0aa5bd957c60e6162e37ea81506b12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ef499aa8df1cc0b11195cf4b3b5028d"><td class="memItemLeft" align="right" valign="top">const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a7ef499aa8df1cc0b11195cf4b3b5028d">getName</a> () const   throw ()</td></tr>
<tr class="memdesc:a7ef499aa8df1cc0b11195cf4b3b5028d"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns attribute name of column  <a href="#a7ef499aa8df1cc0b11195cf4b3b5028d">More...</a><br /></td></tr>
<tr class="separator:a7ef499aa8df1cc0b11195cf4b3b5028d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:adde5ec5902be1d18cc625cc41526e241"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a></td></tr>
<tr class="memdesc:adde5ec5902be1d18cc625cc41526e241"><td class="mdescLeft">&#160;</td><td class="mdescRight">attribute name of the column  <a href="#adde5ec5902be1d18cc625cc41526e241">More...</a><br /></td></tr>
<tr class="separator:adde5ec5902be1d18cc625cc41526e241"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ef4e55c2d56db9cdb2fc8266c982691"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#a8ef4e55c2d56db9cdb2fc8266c982691">db_type_</a></td></tr>
<tr class="memdesc:a8ef4e55c2d56db9cdb2fc8266c982691"><td class="mdescLeft">&#160;</td><td class="mdescRight">database type of the column  <a href="#a8ef4e55c2d56db9cdb2fc8266c982691">More...</a><br /></td></tr>
<tr class="separator:a8ef4e55c2d56db9cdb2fc8266c982691"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class represents a generic column, is the base class for all column classes and allows a uniform handling of columns. </p>
<p>This class is indentended to be a base class, so it has a virtual destruktor and pure virtual methods, which need to be implemented in a derived class. </p><dl class="section author"><dt>Author</dt><dd>Sebastian Breß </dd></dl>
<dl class="section version"><dt>Version</dt><dd>0.2 </dd></dl>
<dl class="section date"><dt>Date</dt><dd>2013 </dd></dl>
<dl class="section copyright"><dt>Copyright</dt><dd>GNU LESSER GENERAL PUBLIC LICENSE - Version 3, <a href="http://www.gnu.org/licenses/lgpl-3.0.txt">http://www.gnu.org/licenses/lgpl-3.0.txt</a> </dd></dl>

<p>Definition at line <a class="el" href="base__column_8hpp_source.htm#l00038">38</a> of file <a class="el" href="base__column_8hpp_source.htm">base_column.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="ae8d2ac257af16e7d8bc78e1ea43cb14d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef shared_pointer_namespace::shared_ptr&lt;<a class="el" href="classCoGaDB_1_1ColumnBase.htm">ColumnBase</a>&gt; <a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">CoGaDB::ColumnBase::ColumnPtr</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>defines a smart pointer to a <a class="el" href="classCoGaDB_1_1ColumnBase.htm" title="This class represents a generic column, is the base class for all column classes and allows a uniform...">ColumnBase</a> Object </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="dictionary_compressed_column_8hpp-example.htm#a11">dictionary_compressed_column.hpp</a>.</dd>
</dl>
<p>Definition at line <a class="el" href="base__column_8hpp_source.htm#l00041">41</a> of file <a class="el" href="base__column_8hpp_source.htm">base_column.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a7952cc631416caa4c03523daeb66954e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">CoGaDB::ColumnBase::ColumnBase </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a>&#160;</td>
          <td class="paramname"><em>db_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="base__column_8cpp_source.htm#l00010">10</a> of file <a class="el" href="base__column_8cpp_source.htm">base_column.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a496bb224058ea81d70617fa851308306"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CoGaDB::ColumnBase::~ColumnBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="base__column_8cpp_source.htm#l00014">14</a> of file <a class="el" href="base__column_8cpp_source.htm">base_column.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a320ad0009caf49680ecaf4c062fba500"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::add </td>
          <td>(</td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_Value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>adds constant to column </p>
<p>for all indeces i holds the following property: B[i]=A[i]+new_Value </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a23c7594a257774ef9ddfbe99abd036a5">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#abe0449e21775f7b45c4bf78b92a10c7d">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="afa1d5b89b522eabcae6dcecfd84a308b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>&#160;</td>
          <td class="paramname"><em>column</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>vector addition of two columns </p>
<p>for all indeces i holds the following property: C[i]=A[i]+B[i] </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a84c1639c77eadf006e7807784d9dff29">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a86465e676bc50050e742502349a329b0">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="aaa5a675946ca7ec7b44b843a76927745"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::clearContent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>deletes all values stored in the column </p>
<dl class="section return"><dt>Returns</dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#aef36a1764886ea25e05ba098571fa711">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a62bc39e59a4e77774cb614035a8e59cf">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#ad409f6410bbb1e06876e8b90f7fd0cc8">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#a8c8300485edffa6846da7907a4978053">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#a26e3afbca849e28e17986c08a8720132">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a44ce38ba1b6f9d0f23f780ca42123284"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> CoGaDB::ColumnBase::copy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>virtual copy constructor </p>
<dl class="section return"><dt>Returns</dt><dd>a ColumnPtr to an exakt copy of the current column </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a811d44896f4edb003b9bad6e619a24c9">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a9848338c3dee910d35f293ad2e68573c">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#aef1f80f74e5aac3a7776cfbe11e1a12d">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#a313dfb52faac7302baf34357cc6aa6e8">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#a83eb97a5171c978cf67592bb0fd55f5a">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="acb6c8321b6451c2bef58936e623b328c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::division </td>
          <td>(</td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_Value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>devide values in column by a constant </p>
<p>for all indeces i holds the following property: B[i]=A[i]/new_Value </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a1eb7c89cfe4e8f8999380db3a86e14fa">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a7c603f30ff974d76878a2d24fc863df6">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a8f0a22c214d54f410bb8a498a317a829"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::division </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>&#160;</td>
          <td class="paramname"><em>column</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>devide column A with column B </p>
<p>for all indeces i holds the following property: C[i]=A[i]/B[i] </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a2cdd3d1b385fc47df49d25c216b3d82f">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#aa792f1534eb72663cdad309f183902df">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a6612812357258a4c3cc57134c8d717e3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const boost::any CoGaDB::ColumnBase::get </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a>&#160;</td>
          <td class="paramname"><em>tid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>generic function for fetching a value form a column (slow) </p>
<p>check whether the object is valid (e.g., when a tid is not valid, then the returned object is invalid as well) </p><dl class="section return"><dt>Returns</dt><dd>object of type boost::any containing the value on position tid </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a1819921b10958505deb822bd55f5b7d7">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a103d58f7da455ea389075b98e823e071">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#a1e2233c02a16f68b5a24b442b27dfe69">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#ac959acec451b9212e6b06aaef0655efb">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#abb73422160b0559ec5cdfa4a87389b64">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a7ef499aa8df1cc0b11195cf4b3b5028d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const string CoGaDB::ColumnBase::getName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns attribute name of column </p>
<dl class="section return"><dt>Returns</dt><dd>attribute name of column </dd></dl>

<p>Definition at line <a class="el" href="base__column_8cpp_source.htm#l00020">20</a> of file <a class="el" href="base__column_8cpp_source.htm">base_column.cpp</a>.</p>

<p>References <a class="el" href="base__column_8hpp_source.htm#l00148">name_</a>.</p>

</div>
</div>
<a class="anchor" id="ab7f43b8bc8bb5956df6e2b5256193bc3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int CoGaDB::ColumnBase::getSizeinBytes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>returns the size in bytes the column consumes in main memory </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1Column.htm#abc0fc654372f9145d96e42e058e64b54">CoGaDB::Column&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ae990bc63aca6d10e6c25fc55f0d8de15">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a3f396ea8553256c4194d21dc374939f0">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#a6f0604b415a3e593039841349784cfab">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#a293ce43770e123dcffad899281865a73">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#accbee2285b9d47518547c5383a080552">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="abb0aa5bd957c60e6162e37ea81506b12"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> CoGaDB::ColumnBase::getType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns database type of column (as defined in "SQL" statement) </p>

<p>Definition at line <a class="el" href="base__column_8cpp_source.htm#l00016">16</a> of file <a class="el" href="base__column_8cpp_source.htm">base_column.cpp</a>.</p>

<p>References <a class="el" href="base__column_8hpp_source.htm#l00150">db_type_</a>.</p>

</div>
</div>
<a class="anchor" id="a71ef9d91dace96d0ce47ed9cdab552d0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> CoGaDB::ColumnBase::hash_join </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>&#160;</td>
          <td class="paramname"><em>join_column</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>joins two columns using the hash join algorithm </p>
<dl class="section return"><dt>Returns</dt><dd>PositionListPairPtr to a PositionListPair, which represents the result </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac66da4e2c203ff8ca673c19242a7e766">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="adbb7a3275d4e1c5634b5af969f82cfae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::insert </td>
          <td>(</td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_Value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>appends a value new_Value to end of column </p>
<dl class="section return"><dt>Returns</dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a298584fc2f5bdaea233194ab6b6b0834">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#afc908013732e12082f5012b1081ae2cb">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#acc4ba721be59d5f3b2049031bd52df74">CoGaDB::CompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#ab375808753f177986ecb8cc824bf2f99">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a007460a4371ac5a9d21de9584e117e88"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::isCompressed </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>use this method to determine whether the column is materialized or a Lookup <a class="el" href="classCoGaDB_1_1Column.htm">Column</a> </p>
<dl class="section return"><dt>Returns</dt><dd>true in case the column is storing the compressed values and false otherwise. </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#acb4e29d5b1fb0bb8c1f3ec968311ebba">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a86e8fb83523c163a2751ca099e8fc75e">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#abccceb7dfbcce752a4dfc4ef06904c4f">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#a8ba3e2a3c8bd3e320d059146b0244555">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a15a93d403eea75c1050d73b708c7c7cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::isMaterialized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>use this method to determine whether the column is materialized or a Lookup <a class="el" href="classCoGaDB_1_1Column.htm">Column</a> </p>
<dl class="section return"><dt>Returns</dt><dd>true in case the column is storing the plain values (without compression) and false in case the column is a LookupColumn. </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#aeeb1eb6d5b3c4c421aa79bb5584da856">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#adeb912dbc765f0feb09dc4d95b464906">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#ada550a1425ba2d502afeb99391b8124b">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#a89cf6f9a5748168bcf1bd60e52b4c67e">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a84c32d3ed8b6570e3c9d190a85dfdfbd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::load </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>load column from disc </p>
<p>calling load on a column that is not empty yields undefined behaviour </p><dl class="section return"><dt>Returns</dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a5ddfa2dbe32f62d7a12bd0edf5f6ccd2">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#ac866b48aad3250f16a9558ac8c968656">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#ab3506fd211adfa561511305e9adf5925">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#a67ca44ed4387d857210c790571db5531">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#a422928275ea027a5ea67cdc767d3add2">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="add9deb21f77a3e6d0a785018f7c5ad8c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::minus </td>
          <td>(</td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_Value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>substracts constant from column </p>
<p>for all indeces i holds the following property: B[i]=A[i]-new_Value </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a05bb997933c470e4d7ff2c337c727356">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a517e7c030036165fc07f38a871f09550">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a382990cf75e1987fdaf529e83edc1fe2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::minus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>&#160;</td>
          <td class="paramname"><em>column</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>vector substraction of two columns </p>
<p>for all indeces i holds the following property: C[i]=A[i]-B[i] </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#adc71977798f104163115514a5c4fe9a8">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#aecf75e19247ccd3e34d0b8f70b00b2bb">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a08c2ef362738b6ce3f4eba429911b7e2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::multiply </td>
          <td>(</td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_Value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>multiply constant with column </p>
<p>for all indeces i holds the following property: B[i]=A[i]*new_Value </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a62130417f392031ea0e277a6ae291eb4">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a629b2349ed7289016f9ea1cf2d8e69ac">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a3df406a150d90c7c93e997a0a97f7b8d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::multiply </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>&#160;</td>
          <td class="paramname"><em>column</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>multiply two columns A and B </p>
<p>for all indeces i holds the following property: C[i]=A[i]*B[i] </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0c68502575a0f9b3eb47ceb12c415997">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a49169a89bcb598b84dcd11eac21c2055">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="acde1f36d5fe42e09ae4561eebee1b438"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> CoGaDB::ColumnBase::nested_loop_join </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>&#160;</td>
          <td class="paramname"><em>join_column</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>joins two columns using the nested loop join algorithm </p>
<dl class="section return"><dt>Returns</dt><dd>PositionListPairPtr to a PositionListPair, which represents the result </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a10457ede9dda1c5cfc120fad77b36d04">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a3368c3e420a2d0456183007b1edde238"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> CoGaDB::ColumnBase::parallel_selection </td>
          <td>(</td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>value_for_comparison</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a>&#160;</td>
          <td class="paramname"><em>comp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>number_of_threads</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>filters the values of a column in parallel according to a filter condition consisting of a comparison value and a ValueComparator (=,&lt;,&gt;) </p>
<p>the additional parameter specifies the number of threads that may be used to perform the operation </p><dl class="section return"><dt>Returns</dt><dd>PositionListPtr to a PositionList, which represents the result </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a11b4618c929dcc789191bc6c2aa48068">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="ac4bb2af029ab94ba3689cfd1864e4e6c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void CoGaDB::ColumnBase::print </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>prints the content of a column </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac87ff73aa6d72bbf3b5ae510327e22c6">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a976585f7499909ef8433ec331194bfed">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#a575db3a0c6ca0983a1b3a78d3ee58c7f">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#ad1805b7bec6013529aa2aaa17117d08b">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#aca3e004b9b02372235311f16c79a2bcb">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="aa0c448970e05e30f9f79e1d943a9a006"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::remove </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a>&#160;</td>
          <td class="paramname"><em>tid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>deletes the value on position tid </p>
<dl class="section return"><dt>Returns</dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a92e8eb3fbeb4d58e65f23796266881d7">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a13aebff1e2550f0f289aa060c8ec5d31">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#a2b891af406348cf30d8aa2485256ae55">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#a0341d28696ecc439415b17f336ec40c2">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#a53be8eb250bb6a1558ee310287b607ac">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a8e7386bf2883efb6def0a31f26a4170b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::remove </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>&#160;</td>
          <td class="paramname"><em>tid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>deletes the values defined in the position list </p>
<p>assumes tid list is sorted ascending </p><dl class="section return"><dt>Returns</dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a48ab5ffdecfbb26eb966e661966395fd">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a8bf5390ab389c9602010a05079181bc6">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#aa69c5ad408342e007d87e8dba52aae12">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#a7917cd1e56ad13c90a4c127972f8b026">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#ad4f7e740fcc1637c87219b60d31f1a05">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a943315677651ad20b91400a40cca2e08"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> CoGaDB::ColumnBase::selection </td>
          <td>(</td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>value_for_comparison</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceCoGaDB.htm#aeea69c893912bd4994fd616b189db4d4">ValueComparator</a>&#160;</td>
          <td class="paramname"><em>comp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>filters the values of a column according to a filter condition consisting of a comparison value and a ValueComparator (=,&lt;,&gt;) </p>
<dl class="section return"><dt>Returns</dt><dd>PositionListPtr to a PositionList, which represents the result </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a91c27b988eb79cca9163a82492936814">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a0101453631de8ff59ffc24eed760d81d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual size_t CoGaDB::ColumnBase::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>returns the number of values (rows) in a column </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#ab2d579504adc8c837c18a1ddc691175d">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#a230cfc38850de02c04b109701976b0d0">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#ace77e03c40da17d6b158a008d305ea88">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#a4dab93f9e3b6383acd1959c9a0495fff">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="ab03331430756cc4080800cf4eb1cf4ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> CoGaDB::ColumnBase::sort </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5">SortOrder</a>&#160;</td>
          <td class="paramname"><em>order</em> = <code><a class="el" href="namespaceCoGaDB.htm#a4da9b0c7d2a04facb7e4834b8cb86aa5aac7a3b8f2752e8a54ea32049c0d8de36">ASCENDING</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>sorts a column w.r.t. a SortOrder </p>
<dl class="section return"><dt>Returns</dt><dd>PositionListPtr to a PositionList, which represents the result </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac2c0472e88ed4c14d10a879a6646c3f2">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a8b1b5878495d33efe00e163e9f64b449"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceCoGaDB.htm#a33ccb4afa788aed82f287658a7b76d2b">PositionListPairPtr</a> CoGaDB::ColumnBase::sort_merge_join </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>&#160;</td>
          <td class="paramname"><em>join_column</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>joins two columns using the sort merge join algorithm </p>
<dl class="section return"><dt>Returns</dt><dd>PositionListPairPtr to a PositionListPair, which represents the result </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a477d9ba1373752a95eabf0fa429b06d4">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a6c4176f8f8d93e7694e0a52284bd98cf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::store </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>store a column on the disc </p>
<dl class="section return"><dt>Returns</dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8b170edcae21575ea41c55df2c63e823">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a2fa912aed39b1d12645324a9e57f4b1d">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#a38cf608efadca9d4eb413fbace5902d6">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#a9058fe90f0081e187288c071d099ef61">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#a24bd8a3baf1d5a5b7cdeabaafcfc945b">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a025b63767aae6e1ab2c772689a4a0033"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::type_info&amp; CoGaDB::ColumnBase::type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>returns type information of internal values </p>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a15ad2a4372a39ea9a450897534db24d2">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a791400c0d1a3b91ef3fa8ca3f37956b9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a>&#160;</td>
          <td class="paramname"><em>tid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_Value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>updates the value on position tid with a value new_Value </p>
<dl class="section return"><dt>Returns</dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac8b41ece275215ee6ca82d57294f1bb9">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a0d8efcd30e03b329e7f78f8f83ea1404">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#ade964e05f114aff2991c464b8e23e7b6">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#af174d0f8d2eb8a1a1a891abf4a72af47">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a414586ff23e1a6728d8af9556cc6ad74"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CoGaDB::ColumnBase::update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>&#160;</td>
          <td class="paramname"><em>tids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>updates the values specified by the position list with a value new_Value </p>
<dl class="section return"><dt>Returns</dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implemented in <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#aa067e7e8d65ba158434b2b04a2ef3f65">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1LookupArray.htm#a9f81d5f546d30147a43fbced29aef0e0">CoGaDB::LookupArray&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1DictionaryCompressedColumn.htm#a9f7f8ba5735049e244d7c4ace0a778ae">CoGaDB::DictionaryCompressedColumn&lt; T &gt;</a>, <a class="el" href="classCoGaDB_1_1CompressedColumn.htm#a0c44962161e217c70433c5db963d0686">CoGaDB::CompressedColumn&lt; T &gt;</a>, and <a class="el" href="classCoGaDB_1_1Column.htm#afcb097510382eea5d11d5b2bc949daa5">CoGaDB::Column&lt; T &gt;</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a8ef4e55c2d56db9cdb2fc8266c982691"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> CoGaDB::ColumnBase::db_type_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>database type of the column </p>

<p>Definition at line <a class="el" href="base__column_8hpp_source.htm#l00150">150</a> of file <a class="el" href="base__column_8hpp_source.htm">base_column.hpp</a>.</p>

<p>Referenced by <a class="el" href="lookup__array_8hpp_source.htm#l00146">CoGaDB::LookupArray&lt; T &gt;::copy()</a>, and <a class="el" href="base__column_8cpp_source.htm#l00016">getType()</a>.</p>

</div>
</div>
<a class="anchor" id="adde5ec5902be1d18cc625cc41526e241"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string CoGaDB::ColumnBase::name_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>attribute name of the column </p>

<p>Definition at line <a class="el" href="base__column_8hpp_source.htm#l00148">148</a> of file <a class="el" href="base__column_8hpp_source.htm">base_column.hpp</a>.</p>

<p>Referenced by <a class="el" href="lookup__array_8hpp_source.htm#l00146">CoGaDB::LookupArray&lt; T &gt;::copy()</a>, <a class="el" href="column_8hpp_source.htm#l00184">CoGaDB::Column&lt; T &gt;::get()</a>, <a class="el" href="base__column_8cpp_source.htm#l00020">getName()</a>, <a class="el" href="column__base__typed_8hpp_source.htm#l00200">CoGaDB::ColumnBaseTyped&lt; T &gt;::hash_join()</a>, <a class="el" href="column_8hpp_source.htm#l00249">CoGaDB::Column&lt; T &gt;::load()</a>, <a class="el" href="column__base__typed_8hpp_source.htm#l00259">CoGaDB::ColumnBaseTyped&lt; T &gt;::nested_loop_join()</a>, <a class="el" href="column_8hpp_source.htm#l00194">CoGaDB::Column&lt; T &gt;::print()</a>, <a class="el" href="column__base__typed_8hpp_source.htm#l00154">CoGaDB::ColumnBaseTyped&lt; T &gt;::selection()</a>, <a class="el" href="column__base__typed_8hpp_source.htm#l00240">CoGaDB::ColumnBaseTyped&lt; T &gt;::sort_merge_join()</a>, <a class="el" href="column_8hpp_source.htm#l00233">CoGaDB::Column&lt; T &gt;::store()</a>, and <a class="el" href="column_8hpp_source.htm#l00110">CoGaDB::Column&lt; T &gt;::update()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="base__column_8hpp_source.htm">base_column.hpp</a></li>
<li><a class="el" href="base__column_8cpp_source.htm">base_column.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Apr 1 2017 14:11:30 for Database Implementation Techniques Programming Task SoSe2016 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
