<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Database Implementation Techniques Programming Task SoSe2016: column.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Database Implementation Techniques Programming Task SoSe2016
   </div>
   <div id="projectbrief">DB2 Programming Task SoSe2016</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4270bfced15e0e73154b13468c7c9ad9.htm">core</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">column.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="column_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="column__base__typed_8hpp.htm">core/column_base_typed.hpp</a>&gt;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceCoGaDB.htm">CoGaDB</a>{</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm">   10</a></span>&#160;<span class="keyword">class </span><a class="code" href="classCoGaDB_1_1Column.htm">Column</a> : <span class="keyword">public</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped</a>&lt;T&gt;{</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;        <span class="comment">/***************** constructors and destructor *****************/</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;        <a class="code" href="classCoGaDB_1_1Column.htm#a44481f9232a50f794ec676d8673fbe1a">Column</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type);</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;        <span class="comment">//Column(const Column&amp; column);</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="classCoGaDB_1_1Column.htm#a621aebd6e1e773434faf88d9f3374efd">~Column</a>();</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">insert</a>(<span class="keyword">const</span> boost::any&amp; new_value);</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">insert</a>(<span class="keyword">const</span> T&amp; new_value);        </div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">typename</span> InputIterator&gt;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">insert</a>(InputIterator first, InputIterator last);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">update</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid, <span class="keyword">const</span> boost::any&amp; new_value);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">update</a>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid, <span class="keyword">const</span> boost::any&amp; new_value);  </div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        </div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="comment">//assumes tid list is sorted ascending</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a26e3afbca849e28e17986c08a8720132">clearContent</a>();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> boost::any <span class="keyword">get</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="comment">//virtual const boost::any* const getRawData();</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classCoGaDB_1_1Column.htm#aca3e004b9b02372235311f16c79a2bcb">print</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">size_t</span> <a class="code" href="classCoGaDB_1_1Column.htm#a4dab93f9e3b6383acd1959c9a0495fff">size</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>();</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCoGaDB_1_1Column.htm#accbee2285b9d47518547c5383a080552">getSizeinBytes</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>();</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> <a class="code" href="classCoGaDB_1_1Column.htm#a83eb97a5171c978cf67592bb0fd55f5a">copy</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a24bd8a3baf1d5a5b7cdeabaafcfc945b">store</a>(<span class="keyword">const</span> std::string&amp; path);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a422928275ea027a5ea67cdc767d3add2">load</a>(<span class="keyword">const</span> std::string&amp; path);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a89cf6f9a5748168bcf1bd60e52b4c67e">isMaterialized</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a8ba3e2a3c8bd3e320d059146b0244555">isCompressed</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>();     </div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        </div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keyword">virtual</span> T&amp; <a class="code" href="classCoGaDB_1_1Column.htm#ab676d44267ae7fb54068f14bd6a26104">operator[]</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> index);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        std::vector&lt;T&gt;&amp; <a class="code" href="classCoGaDB_1_1Column.htm#a1beb62451a2b27cfa0b5317d3e94ca5f">getContent</a>();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keyword">private</span>:</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm">   49</a></span>&#160;                <span class="keyword">struct </span><a class="code" href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm">Type_TID_Comparator</a> {</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm#adc41e80589b1d6305e9f1c4654e3b01f">   50</a></span>&#160;                        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm#adc41e80589b1d6305e9f1c4654e3b01f">operator() </a>(std::pair&lt;T,TID&gt; i, std::pair&lt;T,TID&gt; j) { <span class="keywordflow">return</span> (i.first&lt;j.first);}</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                } <a class="code" href="classCoGaDB_1_1Column.htm#ac4ad5def8ec3c86645fc18acf516bf5a">type_tid_comparator</a>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        </div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">   55</a></span>&#160;        std::vector&lt;T&gt; <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;};</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">/***************** Start of Implementation Section ******************/</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        </div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a44481f9232a50f794ec676d8673fbe1a">   64</a></span>&#160;        <a class="code" href="classCoGaDB_1_1Column.htm#a44481f9232a50f794ec676d8673fbe1a">Column&lt;T&gt;::Column</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type) : <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm">ColumnBaseTyped</a>&lt;T&gt;(name,db_type), <a class="code" href="classCoGaDB_1_1Column.htm#ac4ad5def8ec3c86645fc18acf516bf5a">type_tid_comparator</a>(), <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>(){</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">//      template&lt;class T&gt;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">//      Column&lt;T&gt;::Column(const Column&amp; column) : this-&gt;db_type_(column-&gt;db_type_), this-&gt;values_(column-&gt;values_){</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">//              </span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">//      }</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a621aebd6e1e773434faf88d9f3374efd">   74</a></span>&#160;        <a class="code" href="classCoGaDB_1_1Column.htm#a621aebd6e1e773434faf88d9f3374efd">Column&lt;T&gt;::~Column</a>(){</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a1beb62451a2b27cfa0b5317d3e94ca5f">   79</a></span>&#160;        std::vector&lt;T&gt;&amp; <a class="code" href="classCoGaDB_1_1Column.htm#a1beb62451a2b27cfa0b5317d3e94ca5f">Column&lt;T&gt;::getContent</a>(){</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">   85</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">Column&lt;T&gt;::insert</a>(<span class="keyword">const</span> boost::any&amp; new_value){</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <span class="keywordflow">if</span>(new_value.empty()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keywordflow">if</span>(<span class="keyword">typeid</span>(T)==new_value.type()){</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                         T value = boost::any_cast&lt;T&gt;(new_value);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                         <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.push_back(value);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                         <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#abf710fd5fe45e15265cdcb0c4b3525cd">   96</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">Column&lt;T&gt;::insert</a>(<span class="keyword">const</span> T&amp; new_value){</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.push_back(new_value);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">typename</span> InputIterator&gt;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a4a26ab2a3a184a02380eb936e98be675">  104</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">Column&lt;T&gt;::insert</a>(InputIterator first, InputIterator last){</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                this-&gt;<a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.insert(this-&gt;<a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.end(),first,last);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">  110</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">Column&lt;T&gt;::update</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid, <span class="keyword">const</span> boost::any&amp; new_value){</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordflow">if</span>(new_value.empty()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                <span class="keywordflow">if</span>(<span class="keyword">typeid</span>(T)==new_value.type()){</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                         T value = boost::any_cast&lt;T&gt;(new_value);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                         <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>[tid]=value;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                         <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                }<span class="keywordflow">else</span>{</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                        std::cout &lt;&lt; <span class="stringliteral">&quot;Fatal Error!!! Typemismatch for column &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a> &lt;&lt; std::endl; </div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#afcb097510382eea5d11d5b2bc949daa5">  123</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">Column&lt;T&gt;::update</a>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tids, <span class="keyword">const</span> boost::any&amp; new_value){</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                <span class="keywordflow">if</span>(!tids)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">if</span>(new_value.empty()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <span class="keywordflow">if</span>(<span class="keyword">typeid</span>(T)==new_value.type()){</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                         T value = boost::any_cast&lt;T&gt;(new_value);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                         <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;tids-&gt;size();i++){</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                <a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid=(*tids)[i];</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>[tid]=value;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                         }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                         <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                }<span class="keywordflow">else</span>{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                        std::cout &lt;&lt; <span class="stringliteral">&quot;Fatal Error!!! Typemismatch for column &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a> &lt;&lt; std::endl; </div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                }</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;           </div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        </div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a53be8eb250bb6a1558ee310287b607ac">  144</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a53be8eb250bb6a1558ee310287b607ac">Column&lt;T&gt;::remove</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid){</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.erase(<a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.begin()+tid);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        </div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#ad4f7e740fcc1637c87219b60d31f1a05">  150</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a53be8eb250bb6a1558ee310287b607ac">Column&lt;T&gt;::remove</a>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tids){</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">if</span>(!tids)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="comment">//test whether tid list has at least one element, if not, return with error</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="keywordflow">if</span>(tids-&gt;empty())</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">false</span>;           </div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="comment">//assert();</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="keyword">typename</span> PositionList::reverse_iterator rit;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="keywordflow">for</span> (rit = tids-&gt;rbegin(); rit!=tids-&gt;rend(); ++rit)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                        <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.erase(<a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.begin()+(*rit));</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="comment">/*</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">                //delete tuples in reverse order, otherwise the first deletion would invalidate all other tids</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">                unsigned int i=tids-&gt;size()-1;</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">                while(true)     </span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">                        TID = (*tids)[i];</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">                        values_.erase(values_.begin()+tid);             </span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">                        if(i==0) break;</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">                }*/</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                </div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                </div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;                    </div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a26e3afbca849e28e17986c08a8720132">  178</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a26e3afbca849e28e17986c08a8720132">Column&lt;T&gt;::clearContent</a>(){</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.clear();</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#abb73422160b0559ec5cdfa4a87389b64">  184</a></span>&#160;        <span class="keyword">const</span> boost::any <a class="code" href="classCoGaDB_1_1Column.htm#abb73422160b0559ec5cdfa4a87389b64">Column&lt;T&gt;::get</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid){</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="keywordflow">if</span>(tid&lt;<a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.size())</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                        <span class="keywordflow">return</span> boost::any(<a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>[tid]);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <span class="keywordflow">else</span>{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                        std::cout &lt;&lt; <span class="stringliteral">&quot;fatal Error!!! Invalid TID!!! Attribute: &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a> &lt;&lt; <span class="stringliteral">&quot; TID: &quot;</span> &lt;&lt; tid  &lt;&lt; std::endl;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                }</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="keywordflow">return</span> boost::any();</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#aca3e004b9b02372235311f16c79a2bcb">  194</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classCoGaDB_1_1Column.htm#aca3e004b9b02372235311f16c79a2bcb">Column&lt;T&gt;::print</a>() <span class="keyword">const</span> throw(){</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                std::cout &lt;&lt; <span class="stringliteral">&quot;| &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a> &lt;&lt; <span class="stringliteral">&quot; |&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                std::cout &lt;&lt; <span class="stringliteral">&quot;________________________&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;<a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.size();i++){</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                        std::cout &lt;&lt; <span class="stringliteral">&quot;| &quot;</span> &lt;&lt; <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>[i] &lt;&lt; <span class="stringliteral">&quot; |&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a4dab93f9e3b6383acd1959c9a0495fff">  202</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="classCoGaDB_1_1Column.htm#a4dab93f9e3b6383acd1959c9a0495fff">Column&lt;T&gt;::size</a>() <span class="keyword">const</span> throw(){</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.size();</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a83eb97a5171c978cf67592bb0fd55f5a">  206</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> <a class="code" href="classCoGaDB_1_1Column.htm#a83eb97a5171c978cf67592bb0fd55f5a">Column&lt;T&gt;::copy</a>()<span class="keyword"> const</span>{</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>(<span class="keyword">new</span> <a class="code" href="classCoGaDB_1_1Column.htm">Column&lt;T&gt;</a>(*<span class="keyword">this</span>));</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        }</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="comment">/***************** relational operations on Columns which return lookup tables *****************/</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">//      template&lt;class T&gt;</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">//      const std::vector&lt;TID&gt; Column&lt;T&gt;::sort(const ComputeDevice comp_dev) const {</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">//              return std::vector&lt;TID&gt;();</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">//      }</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">//      template&lt;class T&gt; </span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">//      const std::vector&lt;TID&gt; Column&lt;T&gt;::selection(const boost::any&amp; value_for_comparison, const ValueComparator comp, const ComputeDevice comp_dev) const {</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">//              return std::vector&lt;TID&gt;();</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">//      }</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">//      //join algorithms</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">//      template&lt;class T&gt;</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">//      const std::vector&lt;TID_Pair&gt; Column&lt;T&gt;::sort_merge_join(ColumnPtr join_Column, const ComputeDevice comp_dev) const{</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">//              return std::vector&lt;TID_Pair&gt;();</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">//      }</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">//      template&lt;class T&gt;</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">//      const std::vector&lt;TID_Pair&gt; Column&lt;T&gt;::nested_loop_join(ColumnPtr join_Column, const ComputeDevice comp_dev) const{</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">//              return std::vector&lt;TID_Pair&gt;();</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">//      }</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a24bd8a3baf1d5a5b7cdeabaafcfc945b">  233</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a24bd8a3baf1d5a5b7cdeabaafcfc945b">Column&lt;T&gt;::store</a>(<span class="keyword">const</span> std::string&amp; path_){</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                <span class="comment">//string path(&quot;data/&quot;);</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                std::string path(path_);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                path += <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                path += this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a>;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                <span class="comment">//std::cout &lt;&lt; &quot;Writing Column &quot; &lt;&lt; this-&gt;getName() &lt;&lt; &quot; to File &quot; &lt;&lt; path &lt;&lt; std::endl;</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                std::ofstream outfile (path.c_str(),std::ios_base::binary | std::ios_base::out);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                boost::archive::binary_oarchive oa(outfile);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                oa &lt;&lt; <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                outfile.flush();</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                outfile.close();</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        }</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a422928275ea027a5ea67cdc767d3add2">  249</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a422928275ea027a5ea67cdc767d3add2">Column&lt;T&gt;::load</a>(<span class="keyword">const</span> std::string&amp; path_){</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                std::string path(path_);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <span class="comment">//std::cout &lt;&lt; &quot;Loading column &#39;&quot; &lt;&lt; this-&gt;name_ &lt;&lt; &quot;&#39; from path &#39;&quot; &lt;&lt; path &lt;&lt; &quot;&#39;...&quot; &lt;&lt; std::endl;</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                <span class="comment">//string path(&quot;data/&quot;);</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                path += <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                path += this-&gt;<a class="code" href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">name_</a>;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                </div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                <span class="comment">//std::cout &lt;&lt; &quot;Opening File &#39;&quot; &lt;&lt; path &lt;&lt; &quot;&#39;...&quot; &lt;&lt; std::endl;</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                std::ifstream infile (path.c_str(),std::ios_base::binary | std::ios_base::in);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                boost::archive::binary_iarchive ia(infile);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                ia &gt;&gt; <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                infile.close();</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        }</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a89cf6f9a5748168bcf1bd60e52b4c67e">  266</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a89cf6f9a5748168bcf1bd60e52b4c67e">Column&lt;T&gt;::isMaterialized</a>() <span class="keyword">const</span>  throw(){</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        </div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#a8ba3e2a3c8bd3e320d059146b0244555">  271</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1Column.htm#a8ba3e2a3c8bd3e320d059146b0244555">Column&lt;T&gt;::isCompressed</a>() <span class="keyword">const</span>  throw(){</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        }</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#ab676d44267ae7fb54068f14bd6a26104">  276</a></span>&#160;        T&amp; <a class="code" href="classCoGaDB_1_1Column.htm#ab676d44267ae7fb54068f14bd6a26104">Column&lt;T&gt;::operator[]</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> index){</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                </div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>[index];</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#accbee2285b9d47518547c5383a080552">  282</a></span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCoGaDB_1_1Column.htm#accbee2285b9d47518547c5383a080552">Column&lt;T&gt;::getSizeinBytes</a>() <span class="keyword">const</span> throw(){</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                        <span class="keywordflow">return</span> <a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.capacity()*<span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="comment">//total template specialization</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="classCoGaDB_1_1Column.htm#abc0fc654372f9145d96e42e058e64b54">  288</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCoGaDB_1_1Column.htm#accbee2285b9d47518547c5383a080552">Column&lt;std::string&gt;::getSizeinBytes</a>() <span class="keyword">const</span> throw(){</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size_in_bytes=0;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;<a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>.size();++i){</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                        size_in_bytes+=<a class="code" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a>[i].capacity();</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                }</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                <span class="comment">//return values_.size()*sizeof(T);</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                <span class="keywordflow">return</span> size_in_bytes;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">/***************** End of Implementation Section ******************/</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}; <span class="comment">//end namespace CogaDB</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="ttc" id="classCoGaDB_1_1Column_htm_a26e3afbca849e28e17986c08a8720132"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a26e3afbca849e28e17986c08a8720132">CoGaDB::Column::clearContent</a></div><div class="ttdeci">virtual bool clearContent()</div><div class="ttdoc">deletes all values stored in the column </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00178">column.hpp:178</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ae7e30b13ad239f7010ad333125321e9a"><div class="ttname"><a href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">CoGaDB::PositionListPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; PositionList &gt; PositionListPtr</div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00018">base_column.hpp:18</a></div></div>
<div class="ttc" id="column__base__typed_8hpp_htm"><div class="ttname"><a href="column__base__typed_8hpp.htm">column_base_typed.hpp</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_aca3e004b9b02372235311f16c79a2bcb"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#aca3e004b9b02372235311f16c79a2bcb">CoGaDB::Column::print</a></div><div class="ttdeci">virtual void print() const </div><div class="ttdoc">prints the content of a column </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00194">column.hpp:194</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_aafa4cce4bb58a90461aaebba304b57f7"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">CoGaDB::Column::insert</a></div><div class="ttdeci">virtual bool insert(const boost::any &amp;new_value)</div><div class="ttdoc">appends a value new_Value to end of column </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00085">column.hpp:85</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a1a1287868c72d0b787e67823ca03bd6e"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">CoGaDB::Column::update</a></div><div class="ttdeci">virtual bool update(TID tid, const boost::any &amp;new_value)</div><div class="ttdoc">updates the value on position tid with a value new_Value </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00110">column.hpp:110</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_ae8d2ac257af16e7d8bc78e1ea43cb14d"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">CoGaDB::ColumnBase::ColumnPtr</a></div><div class="ttdeci">shared_pointer_namespace::shared_ptr&lt; ColumnBase &gt; ColumnPtr</div><div class="ttdoc">defines a smart pointer to a ColumnBase Object </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00041">base_column.hpp:41</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_ac53a708d27568a6584e7c03b4ab659e5"><div class="ttname"><a href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">CoGaDB::AttributeType</a></div><div class="ttdeci">AttributeType</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00016">global_definitions.hpp:16</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a422928275ea027a5ea67cdc767d3add2"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a422928275ea027a5ea67cdc767d3add2">CoGaDB::Column::load</a></div><div class="ttdeci">virtual bool load(const std::string &amp;path)</div><div class="ttdoc">load column from disc </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00249">column.hpp:249</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm"><div class="ttname"><a href="namespaceCoGaDB.htm">CoGaDB</a></div><div class="ttdoc">The global namespace of the programming tasks, to avoid name claches with other libraries. </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8cpp_source.htm#l00008">base_column.cpp:8</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a8ba3e2a3c8bd3e320d059146b0244555"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a8ba3e2a3c8bd3e320d059146b0244555">CoGaDB::Column::isCompressed</a></div><div class="ttdeci">virtual bool isCompressed() const </div><div class="ttdoc">use this method to determine whether the column is materialized or a Lookup Column ...</div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00271">column.hpp:271</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a53be8eb250bb6a1558ee310287b607ac"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a53be8eb250bb6a1558ee310287b607ac">CoGaDB::Column::remove</a></div><div class="ttdeci">virtual bool remove(TID tid)</div><div class="ttdoc">deletes the value on position tid </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00144">column.hpp:144</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_ac4ad5def8ec3c86645fc18acf516bf5a"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#ac4ad5def8ec3c86645fc18acf516bf5a">CoGaDB::Column::type_tid_comparator</a></div><div class="ttdeci">struct CoGaDB::Column::Type_TID_Comparator type_tid_comparator</div></div>
<div class="ttc" id="structCoGaDB_1_1Column_1_1Type__TID__Comparator_htm_adc41e80589b1d6305e9f1c4654e3b01f"><div class="ttname"><a href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm#adc41e80589b1d6305e9f1c4654e3b01f">CoGaDB::Column::Type_TID_Comparator::operator()</a></div><div class="ttdeci">bool operator()(std::pair&lt; T, TID &gt; i, std::pair&lt; T, TID &gt; j)</div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00050">column.hpp:50</a></div></div>
<div class="ttc" id="namespaceCoGaDB_htm_a87401571c18eb717e2135969e67a0cf2"><div class="ttname"><a href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">CoGaDB::TID</a></div><div class="ttdeci">unsigned int TID</div><div class="ttdef"><b>Definition:</b> <a href="global__definitions_8hpp_source.htm#l00046">global_definitions.hpp:46</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a83eb97a5171c978cf67592bb0fd55f5a"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a83eb97a5171c978cf67592bb0fd55f5a">CoGaDB::Column::copy</a></div><div class="ttdeci">virtual const ColumnPtr copy() const </div><div class="ttdoc">virtual copy constructor </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00206">column.hpp:206</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBaseTyped_htm"><div class="ttname"><a href="classCoGaDB_1_1ColumnBaseTyped.htm">CoGaDB::ColumnBaseTyped</a></div><div class="ttdoc">This class represents a column with type T, is the base class for all typed column classes and allows...</div><div class="ttdef"><b>Definition:</b> <a href="column__base__typed_8hpp_source.htm#l00033">column_base_typed.hpp:33</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_af51cf7fdaf246c0f074774c4bda96453"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">CoGaDB::Column::values_</a></div><div class="ttdeci">std::vector&lt; T &gt; values_</div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00055">column.hpp:55</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a1beb62451a2b27cfa0b5317d3e94ca5f"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a1beb62451a2b27cfa0b5317d3e94ca5f">CoGaDB::Column::getContent</a></div><div class="ttdeci">std::vector&lt; T &gt; &amp; getContent()</div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00079">column.hpp:79</a></div></div>
<div class="ttc" id="structCoGaDB_1_1Column_1_1Type__TID__Comparator_htm"><div class="ttname"><a href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm">CoGaDB::Column::Type_TID_Comparator</a></div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00049">column.hpp:49</a></div></div>
<div class="ttc" id="classCoGaDB_1_1ColumnBase_htm_adde5ec5902be1d18cc625cc41526e241"><div class="ttname"><a href="classCoGaDB_1_1ColumnBase.htm#adde5ec5902be1d18cc625cc41526e241">CoGaDB::ColumnBase::name_</a></div><div class="ttdeci">std::string name_</div><div class="ttdoc">attribute name of the column </div><div class="ttdef"><b>Definition:</b> <a href="base__column_8hpp_source.htm#l00148">base_column.hpp:148</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a621aebd6e1e773434faf88d9f3374efd"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a621aebd6e1e773434faf88d9f3374efd">CoGaDB::Column::~Column</a></div><div class="ttdeci">virtual ~Column()</div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00074">column.hpp:74</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a24bd8a3baf1d5a5b7cdeabaafcfc945b"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a24bd8a3baf1d5a5b7cdeabaafcfc945b">CoGaDB::Column::store</a></div><div class="ttdeci">virtual bool store(const std::string &amp;path)</div><div class="ttdoc">store a column on the disc </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00233">column.hpp:233</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a44481f9232a50f794ec676d8673fbe1a"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a44481f9232a50f794ec676d8673fbe1a">CoGaDB::Column::Column</a></div><div class="ttdeci">Column(const std::string &amp;name, AttributeType db_type)</div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00064">column.hpp:64</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_accbee2285b9d47518547c5383a080552"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#accbee2285b9d47518547c5383a080552">CoGaDB::Column::getSizeinBytes</a></div><div class="ttdeci">virtual unsigned int getSizeinBytes() const </div><div class="ttdoc">returns the size in bytes the column consumes in main memory </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00282">column.hpp:282</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_ab676d44267ae7fb54068f14bd6a26104"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#ab676d44267ae7fb54068f14bd6a26104">CoGaDB::Column::operator[]</a></div><div class="ttdeci">virtual T &amp; operator[](const int index)</div><div class="ttdoc">defines operator[] for this class, which enables the user to thread all typed columns as arrays...</div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00276">column.hpp:276</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm"><div class="ttname"><a href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a></div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00010">column.hpp:10</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_abb73422160b0559ec5cdfa4a87389b64"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#abb73422160b0559ec5cdfa4a87389b64">CoGaDB::Column::get</a></div><div class="ttdeci">virtual const boost::any get(TID tid)</div><div class="ttdoc">generic function for fetching a value form a column (slow) </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00184">column.hpp:184</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a89cf6f9a5748168bcf1bd60e52b4c67e"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a89cf6f9a5748168bcf1bd60e52b4c67e">CoGaDB::Column::isMaterialized</a></div><div class="ttdeci">virtual bool isMaterialized() const </div><div class="ttdoc">use this method to determine whether the column is materialized or a Lookup Column ...</div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00266">column.hpp:266</a></div></div>
<div class="ttc" id="classCoGaDB_1_1Column_htm_a4dab93f9e3b6383acd1959c9a0495fff"><div class="ttname"><a href="classCoGaDB_1_1Column.htm#a4dab93f9e3b6383acd1959c9a0495fff">CoGaDB::Column::size</a></div><div class="ttdeci">virtual size_t size() const </div><div class="ttdoc">returns the number of values (rows) in a column </div><div class="ttdef"><b>Definition:</b> <a href="column_8hpp_source.htm#l00202">column.hpp:202</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Apr 1 2017 14:11:30 for Database Implementation Techniques Programming Task SoSe2016 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
